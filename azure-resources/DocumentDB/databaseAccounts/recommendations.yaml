- description: Configure at least two regions for high availability
  aprlGuid: 43663217-a1d3-844b-80ea-571a2ce37c6c
  recommendationTypeId: 
  recommendationControl: High Availability
  recommendationImpact: High
  recommendationResourceType: Microsoft.DocumentDB/databaseAccounts
  recommendationMetadataState: Active
  longDescription: |
   Azure leverages a multi-tier isolation approach (rack, DC, zone, region) for Cosmos DB's default resilience with four replicas. 
  potentialBenefits: Enhances SLA & resilience 
  pgVerified: Verified
  publishedToLearn: false
  publishedToAdvisor: false
  automationAvailable: arg
  tags: 
  learnMoreLink:
  - name: Learn More
    url: "https://learn.microsoft.com/en-us/azure/cosmos-db/distribute-data-globally"

- description: Enable service-managed failover for multi-region accounts with single write region
  aprlGuid: 9cabded7-a1fc-6e4a-944b-d7dd98ea31a2
  recommendationTypeId: 
  recommendationControl: Disaster Recovery
  recommendationImpact: High
  recommendationResourceType: Microsoft.DocumentDB/databaseAccounts
  recommendationMetadataState: Active
  longDescription: |
   Cosmos DB boasts high uptime and resiliency. Even so, issues may arise. With Service-Managed failover, if a region is down, Cosmos DB automatically switches to the next available region, requiring no user action.
  potentialBenefits: Auto failover for high uptime 
  pgVerified: Verified
  publishedToLearn: false
  publishedToAdvisor: false
  automationAvailable: arg
  tags: 
  learnMoreLink:
  - name: Learn More
    url: "https://learn.microsoft.com/en-us/azure/cosmos-db/how-to-manage-database-account#automatic-failover"

- description: Evaluate multi-region write capability
  aprlGuid: 9ce78192-74a0-104c-b5bb-9a443f941649
  recommendationTypeId: 
  recommendationControl: Disaster Recovery
  recommendationImpact: High
  recommendationResourceType: Microsoft.DocumentDB/databaseAccounts
  recommendationMetadataState: Active
  longDescription: |
   Multi-region write capability allows for designing applications that are highly available across multiple regions, though it demands careful attention to consistency requirements and conflict resolution. Improper setup may decrease availability and cause data corruption due to unhandled conflicts.
  potentialBenefits: Enhances high availability 
  pgVerified: Verified
  publishedToLearn: false
  publishedToAdvisor: false
  automationAvailable: arg
  tags: 
  learnMoreLink:
  - name: Learn More
    url: "https://learn.microsoft.com/en-us/azure/cosmos-db/distribute-data-globally"

- description: Choose appropriate consistency mode reflecting data durability requirements
  aprlGuid: 23ebe97d-c546-204b-8b0d-00e61a5524f7
  recommendationTypeId: 
  recommendationControl: Disaster Recovery
  recommendationImpact: High
  recommendationResourceType: Microsoft.DocumentDB/databaseAccounts
  recommendationMetadataState: Active
  longDescription: |
   In a globally distributed database, consistency level impacts data durability in region-wide outages. For business continuity, gauge data loss tolerance post-disruption. 
  potentialBenefits: Enhances data durability & recovery 
  pgVerified: Preview
  publishedToLearn: false
  publishedToAdvisor: false
  automationAvailable: no
  tags: 
  learnMoreLink:
  - name: Learn More
    url: "https://learn.microsoft.com/en-us/azure/cosmos-db/consistency-levels"

- description: Configure continuous backup mode
  aprlGuid: e544520b-8505-7841-9e77-1f1974ee86ec
  recommendationTypeId: 
  recommendationControl: Disaster Recovery
  recommendationImpact: High
  recommendationResourceType: Microsoft.DocumentDB/databaseAccounts
  recommendationMetadataState: Active
  longDescription: |
   Cosmos DB's backup is always on, offering protection against data mishaps. Continuous mode allows for self-serve restoration to a pre-mishap point, unlike periodic mode which requires contacting Microsoft support, leading to longer restore times.
  potentialBenefits: Faster self-serve data restore 
  pgVerified: Verified
  publishedToLearn: false
  publishedToAdvisor: false
  automationAvailable: arg
  tags: 
  learnMoreLink:
  - name: Learn More
    url: "https://learn.microsoft.com/en-us/azure/cosmos-db/continuous-backup-restore-introduction"

- description: Ensure query results are fully drained
  aprlGuid: c006604a-0d29-684c-99f0-9729cb40dac5
  recommendationTypeId: 
  recommendationControl: Scalability
  recommendationImpact: High
  recommendationResourceType: Microsoft.DocumentDB/databaseAccounts
  recommendationMetadataState: Active
  longDescription: |
   Cosmos DB has a 4 MB response limit, leading to paginated results for large or partition-spanning queries. Each page shows availability and provides a continuation token for the next. A while loop in code is necessary to traverse all pages until completion.
  potentialBenefits: Maximizes data retrieval efficiency 
  pgVerified: Verified
  publishedToLearn: false
  publishedToAdvisor: false
  automationAvailable: no
  tags: 
  learnMoreLink:
  - name: Learn More
    url: "https://learn.microsoft.com/en-us/azure/cosmos-db/nosql/query/pagination#handling-multiple-pages-of-results"

- description: Maintain singleton pattern in your client
  aprlGuid: 7eb32cf9-9a42-1540-acf8-597cbba8a418
  recommendationTypeId: 
  recommendationControl: Scalability
  recommendationImpact: Medium
  recommendationResourceType: Microsoft.DocumentDB/databaseAccounts
  recommendationMetadataState: Active
  longDescription: |
   Establishing and maintaining database connections is costly. Using a single instance of the SDK client for each account and application is crucial as connections are tied to the client. Compute environments have a limit on open connections, affecting connectivity when exceeded.
  potentialBenefits: Reduces costs & prevents connectivity issues 
  pgVerified: Verified
  publishedToLearn: false
  publishedToAdvisor: false
  automationAvailable: no
  tags: 
  learnMoreLink:
  - name: Learn More
    url: "https://learn.microsoft.com/en-us/azure/cosmos-db/nosql/conceptual-resilient-sdk-applications"

- description: Implement retry logic in your client
  aprlGuid: fa6ac22f-0584-bb4b-80e4-80f4755d1a97
  recommendationTypeId: 
  recommendationControl: High Availability
  recommendationImpact: Medium
  recommendationResourceType: Microsoft.DocumentDB/databaseAccounts
  recommendationMetadataState: Active
  longDescription: |
   Cosmos DB SDKs automatically manage many transient errors through retries. Despite this, it's crucial for applications to implement additional retry policies targeting specific cases that the SDKs can't generically address, ensuring more robust error handling.
  potentialBenefits: Enhances error handling resilience 
  pgVerified: Verified
  publishedToLearn: false
  publishedToAdvisor: false
  automationAvailable: no
  tags: 
  learnMoreLink:
  - name: Learn More
    url: "https://learn.microsoft.com/en-us/azure/cosmos-db/nosql/conceptual-resilient-sdk-applications"

- description: Monitor Cosmos DB health and set up alerts
  aprlGuid: deaea200-013c-414b-ac9f-bfa7a7fb13f0
  recommendationTypeId: 
  recommendationControl: Monitoring and Alerting
  recommendationImpact: Medium
  recommendationResourceType: Microsoft.DocumentDB/databaseAccounts
  recommendationMetadataState: Active
  longDescription: |
  Monitoring the availability and responsiveness of Azure Cosmos DB resources and having alerts set up for your workload is a good practice. This ensures you stay proactive in handling unforeseen events.
  potentialBenefits: Proactive issue management 
  pgVerified: Verified
  publishedToLearn: false
  publishedToAdvisor: false
  automationAvailable: no
  tags: 
  learnMoreLink:
  - name: Learn More
    url: "https://learn.microsoft.com/en-us/azure/cosmos-db/create-alerts"

