- description: Enable diagnostics logging
  aprlGuid: 493f6079-3bb6-4a56-96ba-ab3248474cb1
  recommendationTypeId: null
  recommendationControl: Monitoring and Alerting
  recommendationImpact: Low
  recommendationResourceType: Microsoft.Web/sites
  recommendationMetadataState: Active
  longDescription: |
    Enabling diagnostics logging for your Azure App Service is crucial for monitoring and diagnostics, including both application logging and web server logging.
  potentialBenefits: Enhanced monitoring and diagnostics
  pgVerified: false
  publishedToLearn: false
  publishedToAdvisor: false
  automationAvailable: no
  tags: null
  learnMoreLink:
    - name: Enable diagnostics logging for apps in Azure App Service
      url: "https://learn.microsoft.com/azure/app-service/troubleshoot-diagnostic-logs"

- description: Monitor Performance
  aprlGuid: a7e8bb3d-8ceb-442d-b26f-007cd63f9ffc
  recommendationTypeId: null
  recommendationControl: Monitoring and Alerting
  recommendationImpact: Medium
  recommendationResourceType: Microsoft.Web/sites
  recommendationMetadataState: Active
  longDescription: |
    Use Application Insights to monitor app performance and load behavior, offering real-time insights, issue diagnosis, and root-cause analysis. It supports ASP.NET, ASP.NET Core, Java, and Node.js on Azure App Service, now with built-in monitoring.
  potentialBenefits: Real-time insights and issue diagnosis
  pgVerified: false
  publishedToLearn: false
  publishedToAdvisor: false
  automationAvailable: no
  tags: null
  learnMoreLink:
    - name: Application Insights
      url: "https://learn.microsoft.com/azure/application-insights/app-insights-overview"
    - name: Application monitoring for Azure App Service
      url: "https://learn.microsoft.com/azure/azure-monitor/app/azure-web-apps"

- description: Separate web apps from web APIs
  aprlGuid: 78a5c033-ff51-4332-8a71-83464c34494b
  recommendationTypeId: null
  recommendationControl: Scalability
  recommendationImpact: Low
  recommendationResourceType: Microsoft.Web/sites
  recommendationMetadataState: Active
  longDescription: |
    If your solution includes both a web front end and a web API, decomposing them into separate App Service apps facilitates solution decomposition by workload, allowing for independent scaling. Initially, you can deploy both in the same plan and separate them for independent scaling when necessary.
  potentialBenefits: Independent scaling, easier management
  pgVerified: false
  publishedToLearn: false
  publishedToAdvisor: false
  automationAvailable: no
  tags: null
  learnMoreLink:
    - name: Resiliency checklist for specific Azure services
      url: "https://learn.microsoft.com/azure/architecture/checklist/resiliency-per-service#app-service"

- description: Create a separate storage account for logs
  aprlGuid: 3f9ddb59-0bb3-4acb-9c9b-99aa1776f0ab
  recommendationTypeId: null
  recommendationControl: Scalability
  recommendationImpact: Medium
  recommendationResourceType: Microsoft.Web/sites
  recommendationMetadataState: Active
  longDescription: |
    Creating a separate storage account for logs and not using the same one for application data prevents logging activities from reducing application performance by ensuring that the resources dedicated to handling application data are not burdened by logging processes.
  potentialBenefits: Improves app performance
  pgVerified: false
  publishedToLearn: false
  publishedToAdvisor: false
  automationAvailable: no
  tags: null
  learnMoreLink:
    - name: Resiliency checklist
      url: "https://learn.microsoft.com/azure/architecture/checklist/resiliency-per-service#app-service"

- description: Deploy to a staging slot
  aprlGuid: a1d91661-32d4-430b-b3b6-5adeb0975df7
  recommendationTypeId: null
  recommendationControl: Governance
  recommendationImpact: Medium
  recommendationResourceType: Microsoft.Web/sites
  recommendationMetadataState: Active
  longDescription: |
    Create a deployment slot for staging to deploy updates, verify them, and ensure all instances are warmed up before production swap, reducing bad update chances. An LKG slot allows easy rollback to a previous good deployment if issues arise later, enhancing reliability.
  potentialBenefits: Safer updates and easy rollback
  pgVerified: false
  publishedToLearn: false
  publishedToAdvisor: false
  automationAvailable: arg
  tags: null
  learnMoreLink:
    - name: Set up staging environments in Azure App Service
      url: "https://learn.microsoft.com/azure/app-service-web/web-sites-staged-publishing"

- description: Store configuration as app settings
  aprlGuid: 0b80b67c-afbe-4988-ad58-a85a146b681e
  recommendationTypeId: null
  recommendationControl: Other Best Practices
  recommendationImpact: Medium
  recommendationResourceType: Microsoft.Web/sites
  recommendationMetadataState: Active
  longDescription: |
    Use app settings for configuration and define them in Resource Manager templates or via PowerShell to facilitate part of an automated deployment/update process for improved reliability.
  potentialBenefits: Enhanced reliability via automation
  pgVerified: false
  publishedToLearn: false
  publishedToAdvisor: false
  automationAvailable: arg
  tags: null
  learnMoreLink:
    - name: Configure web apps in Azure App Service
      url: "https://learn.microsoft.com/azure/app-service-web/web-sites-configure"
