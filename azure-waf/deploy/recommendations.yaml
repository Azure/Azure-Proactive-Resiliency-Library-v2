- pageTitle: Avoid manual configuration to enforce consistency with Infrastructure as code
  recommendationImpact: Medium
  recommendationControl: Automation
  recommendationCategory:
    - Reliability
  tags: null
  publishedToLearn: false
  publishToAdvisor: false
  pgVerified: true
  automationAvailable: false
  recommendationTypeId: e6c7e1cc-2f47-264d-aa50-1da421314472
  state: Active
  longDescription: |
    Infrastructure as code (IaC) uses DevOps methodology and versioning with a descriptive model to define and deploy infrastructure, such as networks, virtual machines, load balancers, and connection topologies. Just as the same source code always generates the same binary, an IaC model generates the same environment every time it deploys.

    IaC is a key DevOps practice and a component of continuous delivery. With IaC, DevOps teams can work together with a unified set of practices and tools to deliver applications and their supporting infrastructure rapidly and reliably at scale.

    Key Points:

    - Avoid manual configuration to enforce consistency
    - Deliver stable test environments rapidly at scale
    - Use declarative definition files
  potentialBenefits: |
    Ensure consistent configurations with IaC
  learnMoreLink:
    - name: Avoid manual configuration to enforce consistency
      url: "https://learn.microsoft.com/devops/deliver/what-is-infrastructure-as-code#avoid-manual-configuration-to-enforce-consistenc"

- pageTitle: Validated all changes in development environments before applying them to production
  recommendationImpact: Medium
  recommendationControl: Automation
  recommendationCategory:
    - Reliability
  tags: null
  publishedToLearn: false
  publishToAdvisor: false
  pgVerified: true
  automationAvailable: true
  recommendationTypeId: 63ad027e-611c-294b-acc5-8e3234db9a40
  state: Active
  longDescription: |
    Continuously delivering value has become a mandatory requirement for organizations. To deliver value to your end users, you must release continually and without errors. Continuous delivery (CD) is the process of automating build, test, configuration, and deployment from a build to a production environment. A release pipeline can create multiple testing or staging environments to automate infrastructure creation and deploy new builds. Successive environments support progressively longer-running integration, load, and user acceptance testing activities.
  potentialBenefits: |
    Mitigate production risks through development validation
  learnMoreLink:
    - name: Safe deployment practices]
      url: "https://learn.microsoft.com/devops/operate/safe-deployment-practices"
