{
  "version": "Notebook/1.0",
  "items": [
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "parameters": [
          {
            "id": "51aa3a9b-14e0-4c22-a60d-abdbf8813f00",
            "version": "KqlParameterItem/1.0",
            "name": "Subscription",
            "type": 6,
            "isRequired": true,
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "typeSettings": {
              "additionalResourceOptions": [
                "value::all"
              ],
              "includeAll": false,
              "showDefault": false
            },
            "timeContext": {
              "durationMs": 86400000
            },
            "defaultValue": "value::all",
            "label": " Subscription",
            "value": [
              "value::all"
            ]
          },
          {
            "id": "f342a111-002a-47fd-807f-0d4ccac0618a",
            "version": "KqlParameterItem/1.0",
            "name": "ResourceGroup",
            "label": "Resource Group",
            "type": 2,
            "isRequired": true,
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "query": "resources\r\n| distinct resourceGroup",
            "crossComponentResources": [
              "{Subscription}"
            ],
            "typeSettings": {
              "additionalResourceOptions": [
                "value::all"
              ],
              "showDefault": false
            },
            "defaultValue": "value::all",
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources"
          },
          {
            "id": "d6776ffe-e4f6-4c08-8f9e-a2fe2b3b6634",
            "version": "KqlParameterItem/1.0",
            "name": "TagName",
            "type": 2,
            "query": "Resources\r\n| where tags != '' and tags != '[]'\r\n| mvexpand tags\r\n| extend tagName = tostring(bag_keys(tags)[0])\r\n| distinct tagName\r\n| sort by tagName asc",
            "crossComponentResources": [
              "{Subscription}"
            ],
            "typeSettings": {
              "additionalResourceOptions": []
            },
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources",
            "value": null,
            "label": "Tag Name"
          },
          {
            "id": "f73dc4a1-ef8b-45c5-a30b-a11bb077a3cc",
            "version": "KqlParameterItem/1.0",
            "name": "TagValue",
            "type": 2,
            "query": "Resources\r\n| mvexpand tags\r\n| extend tagName = tostring(bag_keys(tags)[0])\r\n| extend tagValue = tostring(tags[tagName])\r\n| where tags != '' and tags != '[]' and tostring(bag_keys(tags)[0]) == '{TagName}'\r\n| distinct tagValue\r\n| sort by tagValue asc",
            "crossComponentResources": [
              "{Subscription}"
            ],
            "typeSettings": {
              "additionalResourceOptions": []
            },
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources",
            "value": null,
            "label": "Tag Value"
          }
        ],
        "style": "pills",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources"
      },
      "name": "parameters - Filters"
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "parameters": [
          {
            "id": "14bb128f-5b3f-421a-9cf7-b9ad71ece3f6",
            "version": "KqlParameterItem/1.0",
            "name": "CheckforVM",
            "type": 1,
            "query": "resources\r\n| where type =~ 'microsoft.compute/virtualmachines' and resourceGroup in ({ResourceGroup})\r\n| summarize VMCount = count()\r\n| extend HasVM = iff(VMCount > 0, \"Yes\", \"No\")\r\n| project HasVM",
            "crossComponentResources": [
              "{Subscription}"
            ],
            "timeContext": {
              "durationMs": 86400000
            },
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources"
          }
        ],
        "style": "pills",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources"
      },
      "conditionalVisibility": {
        "parameterName": "AlwaysHidden",
        "comparison": "isEqualTo",
        "value": "yes"
      },
      "name": "paramCheckResourceType"
    },
    {
      "type": 11,
      "content": {
        "version": "LinkItem/1.0",
        "style": "tabs",
        "links": [
          {
            "id": "ca40468d-4518-43bf-ac6e-0a11d7331e12",
            "cellValue": "SelectedTab",
            "linkTarget": "parameter",
            "linkLabel": "Overview",
            "subTarget": "Overview",
            "style": "link"
          },
          {
            "id": "26b3c7ef-1a00-4a3f-a773-677f00db9343",
            "cellValue": "SelectedTab",
            "linkTarget": "parameter",
            "linkLabel": "Backup checks ",
            "subTarget": "BCDR",
            "style": "link"
          },
          {
            "id": "7486aa22-b0c2-492c-aa11-35d1f674736f",
            "cellValue": "SelectedTab",
            "linkTarget": "parameter",
            "linkLabel": "Security checks",
            "subTarget": "Security",
            "style": "link"
          },
          {
            "id": "3e67632d-fed6-40ad-8037-6f654a83e536",
            "cellValue": "SelectedTab",
            "linkTarget": "parameter",
            "linkLabel": "Monitor checks",
            "subTarget": "Monitor",
            "style": "link"
          },
          {
            "id": "f280fc2a-f42a-42a4-ad4b-be37ab3e8b48",
            "cellValue": "SelectedTab",
            "linkTarget": "parameter",
            "linkLabel": "Resiliency Zone Adoption checks",
            "subTarget": "zoneAdoption",
            "style": "link"
          }
        ]
      },
      "name": "links - MainTabs"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 1,
            "content": {
              "json": "# Welcome to the Azure Validation Workbook"
            },
            "name": "Welcome"
          },
          {
            "type": 1,
            "content": {
              "json": "### Reference: [Microsoft Azure Well-Architected Framework - Reliability, Security, and Operational Excellence](https://learn.microsoft.com/en-us/azure/architecture/framework/)",
              "style": "upsell"
            },
            "name": "Reference"
          },
          {
            "type": 1,
            "content": {
              "json": "The Azure Validation Workbook provides a comprehensive assessment of your Azure environment, focusing on best practices for resiliency, business continuity and disaster recovery (BCDR), security, and monitoring. It is designed to help you quickly identify gaps, review recommendations, and track remediation progress across your subscriptions and resource groups.\r\n\r\n## Workbook Objectives\r\n\r\n* Evaluate your Azure resources against Microsoft best practices for reliability, security, and operational excellence.\r\n* Surface actionable insights and recommendations to improve your cloud posture.\r\n* Enable filtering by subscription, resource group, and tags for targeted analysis.\r\n* Support export of findings for offline review and reporting.\r\n\r\n> **Note:** This workbook is intended as a guidance tool. Remediation actions should be reviewed and implemented according to your organizationâ€™s policies and priorities."
            },
            "name": "Objective"
          },
          {
            "type": 1,
            "content": {
              "json": "Indicates an implemented recommendation that results in an environment aligned with Azure best practices for resiliency, security, and monitoring.",
              "style": "success"
            },
            "customWidth": "50",
            "name": "Greenlight",
            "styleSettings": {
              "margin": "10px",
              "showBorder": true
            }
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "SelectedTab",
        "comparison": "isEqualTo",
        "value": "Overview"
      },
      "name": "Welcome"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "title": "Zone Adoption",
        "items": [
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "parameters": [
                {
                  "id": "e7320c70-1ffa-4e0a-9ab8-54b064317722",
                  "version": "KqlParameterItem/1.0",
                  "name": "ZonalRegions",
                  "type": 9,
                  "description": "Regions that support availability zones",
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "jsonData": "[\r\n  \"australiaeast\",\r\n  \"brazilsouth\",\r\n  \"canadacentral\",\r\n  \"centralindia\",\r\n  \"centralus\",\r\n  \"eastasia\",\r\n  \"eastus\",\r\n  \"eastus2\",\r\n  \"francecentral\",\r\n  \"germanywestcentral\",\r\n  \"israelcentral\",\r\n  \"italynorth\",\r\n  \"japaneast\",\r\n  \"japanwest\",\r\n  \"koreacentral\",\r\n  \"mexicocentral\",\r\n  \"newzealandnorth\",\r\n  \"northeurope\",\r\n  \"norwayeast\",\r\n  \"polandcentral\",\r\n  \"qatarcentral\",\r\n  \"southafricanorth\",\r\n  \"southcentralus\",\r\n  \"southeastasia\",\r\n  \"spaincentral\",\r\n  \"swedencentral\",\r\n  \"switzerlandnorth\",\r\n  \"uaenorth\",\r\n  \"uksouth\",\r\n  \"westeurope\",\r\n  \"westus2\",\r\n  \"westus3\",\r\n  \"usgovvirginia\",\r\n  \"chinanorth3\"\r\n]",
                  "timeContext": {
                    "durationMs": 86400000
                  },
                  "value": [
                    "australiaeast",
                    "brazilsouth",
                    "canadacentral",
                    "centralindia",
                    "centralus",
                    "eastasia",
                    "eastus",
                    "eastus2",
                    "francecentral",
                    "germanywestcentral",
                    "israelcentral",
                    "italynorth",
                    "japaneast",
                    "japanwest",
                    "koreacentral",
                    "mexicocentral",
                    "newzealandnorth",
                    "northeurope",
                    "norwayeast",
                    "polandcentral",
                    "qatarcentral",
                    "southafricanorth",
                    "southcentralus",
                    "southeastasia",
                    "spaincentral",
                    "swedencentral",
                    "switzerlandnorth",
                    "uaenorth",
                    "uksouth",
                    "westeurope",
                    "westus2",
                    "westus3",
                    "usgovvirginia",
                    "chinanorth3"
                  ]
                },
                {
                  "id": "ff0022fe-9804-41bc-be1d-224e96e651fd",
                  "version": "KqlParameterItem/1.0",
                  "name": "ZonalOnlyResources",
                  "type": 9,
                  "description": "List of zonal resources",
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "jsonData": "[\r\n  \"microsoft.containerinstance/containergroups\",\r\n  \"microsoft.compute/hostgroups\",\r\n  \"microsoft.hdinsight/clusterpools\",\r\n  \"microsoft.storagecache/caches\",\r\n  \"microsoft.network/natgateways\",\r\n  \"microsoft.netapp/netappaccounts\",\r\n  \"microsoft.recoveryservices/vaults\",\r\n  \"microsoft.compute/virtualmachines\",\r\n  \"microsoft.connectedvmwarevsphere/clusters\"\r\n]\r\n",
                  "value": [
                    "microsoft.containerinstance/containergroups",
                    "microsoft.compute/hostgroups",
                    "microsoft.hdinsight/clusterpools",
                    "microsoft.storagecache/caches",
                    "microsoft.network/natgateways",
                    "microsoft.netapp/netappaccounts",
                    "microsoft.recoveryservices/vaults",
                    "microsoft.compute/virtualmachines",
                    "microsoft.connectedvmwarevsphere/clusters"
                  ]
                }
              ],
              "style": "pills",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces"
            },
            "conditionalVisibility": {
              "parameterName": "isVisible",
              "comparison": "isEqualTo",
              "value": "true"
            },
            "name": "parameters - ZonalRegions"
          },
          {
            "type": 11,
            "content": {
              "version": "LinkItem/1.0",
              "style": "tabs",
              "links": [
                {
                  "id": "ca40468d-4518-43bf-ac6e-0a11d7331e12",
                  "cellValue": "SelectedSubTab",
                  "linkTarget": "parameter",
                  "linkLabel": "Overview",
                  "subTarget": "Overview",
                  "style": "link"
                },
                {
                  "id": "f280fc2a-f42a-42a4-ad4b-be37ab3e8b48",
                  "cellValue": "SelectedSubTab",
                  "linkTarget": "parameter",
                  "linkLabel": "Details",
                  "subTarget": "Details",
                  "style": "link"
                }
              ]
            },
            "name": "links - zoneSubTab"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "title": "Zone Overview",
              "items": [
                {
                  "type": 1,
                  "content": {
                    "json": "# Availability Zones\r\n## Availability Zone Best Practice Checks\r\nThis section reviews your Azure resources for alignment with Availability Zone best practices. Recommendations focus on deploying resources across multiple zones to enhance resiliency and minimize the impact of zone-level failures. Implementing these recommendations helps ensure high availability and business continuity for your critical workloads.",
                    "style": "upsell"
                  },
                  "name": "text - AvailabilityZone"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "(\r\n    // Subquery to find all non-compliant resources and their details\r\n    (\r\n        // Sub-subquery to analyze all resources and determine their zone status\r\n        resources\r\n        | where resourceGroup in ({ResourceGroup}) and location in~ ({ZonalRegions}) and type in~ ('Microsoft.Compute/virtualMachines','Microsoft.Compute/disks','microsoft.network/azurefirewalls','microsoft.network/applicationGateways','Microsoft.Network/publicIPAddresses','microsoft.network/virtualnetworkgateways','microsoft.network/bastionhosts','microsoft.network/loadbalancers','microsoft.sql/servers/databases','microsoft.cache/redis','microsoft.dbformysql/flexibleservers','microsoft.dbforpostgresql/flexibleservers','Microsoft.Storage/StorageAccounts','Microsoft.NetApp/netAppAccounts/capacityPools/volumes','microsoft.compute/virtualmachinescalesets','microsoft.apimanagement/service','microsoft.servicebus/namespaces','microsoft.eventhub/namespaces','microsoft.web/serverfarms','microsoft.containerregistry/registries','microsoft.app/managedenvironments')\r\n        | extend ZoneConfigured = case(\r\n            type =~ 'Microsoft.Compute/virtualMachines', array_length(coalesce(todynamic(zones), dynamic([]))) > 0,\r\n            type =~ 'Microsoft.Compute/disks', (tostring(sku.name) has_cs 'ZRS') or array_length(coalesce(todynamic(zones), dynamic([]))) > 0,\r\n            type =~ 'microsoft.network/azurefirewalls', array_length(coalesce(todynamic(zones), dynamic([]))) >= 2,\r\n            type =~ 'microsoft.network/applicationGateways', array_length(coalesce(todynamic(zones), dynamic([]))) >= 2,\r\n            type =~ 'Microsoft.Network/publicIPAddresses', array_length(coalesce(todynamic(zones), dynamic([]))) >= 2,\r\n            type =~ 'microsoft.network/virtualnetworkgateways', tostring(properties.sku.tier) contains 'AZ',\r\n            type =~ 'microsoft.network/bastionhosts', array_length(coalesce(todynamic(zones), dynamic([]))) >= 2,\r\n            type =~ 'microsoft.network/loadbalancers', tolower(tostring(sku.name)) != 'basic' and array_length(coalesce(todynamic(zones), dynamic([]))) >= 2,\r\n            type =~ 'microsoft.sql/servers/databases', tobool(properties.zoneRedundant),\r\n            type =~ 'microsoft.cache/redis', not(properties.zonalAllocationPolicy != 'Automatic' and (isnull(zones) or array_length(coalesce(todynamic(zones), dynamic([]))) <= 1)),\r\n            type =~ 'microsoft.dbformysql/flexibleservers', tostring(properties.highAvailability.mode) == 'ZoneRedundant',\r\n            type =~ 'microsoft.dbforpostgresql/flexibleservers', tostring(properties.highAvailability.mode) == 'ZoneRedundant',\r\n            type =~ 'Microsoft.Storage/StorageAccounts', tostring(sku.name) endswith_cs 'ZRS',\r\n            type =~ 'Microsoft.NetApp/netAppAccounts/capacityPools/volumes', array_length(coalesce(todynamic(zones), dynamic([]))) > 1,\r\n            type =~ 'microsoft.compute/virtualmachinescalesets', array_length(coalesce(todynamic(zones), dynamic([]))) > 1,\r\n            type =~ 'microsoft.apimanagement/service', array_length(coalesce(todynamic(zones), dynamic([]))) > 1,\r\n            type =~ 'microsoft.servicebus/namespaces', tobool(properties.zoneRedundant),\r\n            type =~ 'microsoft.eventhub/namespaces', tobool(properties.zoneRedundant),\r\n            type =~ 'microsoft.web/serverfarms', tobool(properties.zoneRedundant),\r\n            type =~ 'microsoft.containerregistry/registries', tostring(properties.zoneRedundancy) =~ 'Enabled',\r\n            type =~ 'microsoft.app/managedenvironments', tostring(properties.zoneRedundant) !~ 'false',\r\n            false)\r\n        | project id, type, ZoneConfigured\r\n    )\r\n    | union (\r\n        resources\r\n        | where resourceGroup in ({ResourceGroup}) and location in~ ({ZonalRegions}) and type =~ 'microsoft.documentdb/databaseaccounts'\r\n        | mv-expand loc = properties.locations | extend z = tobool(loc.isZoneRedundant) | summarize ZoneConfigured = max(z) by id, type\r\n    )\r\n    | union (\r\n        resources\r\n        | where resourceGroup in ({ResourceGroup}) and location in~ ({ZonalRegions}) and type =~ 'microsoft.containerservice/managedclusters'\r\n        | mv-expand pool = properties.agentPoolProfiles | extend z = array_length(coalesce(pool.availabilityZones, dynamic([]))) > 1 | summarize ZoneConfigured = max(z) by id, type\r\n    )\r\n    | where not(ZoneConfigured)\r\n    | extend Recommendation = case(\r\n        type =~ 'Microsoft.Compute/virtualmachines', 'Deploy VMs across Availability Zones',\r\n        type =~ 'Microsoft.Compute/disks', 'Use Azure Disks with Zone Redundant Storage',\r\n        type =~ 'microsoft.network/applicationGateways', 'Enable multi-zone Application Gateway',\r\n        type =~ 'microsoft.network/azurefirewalls', 'Deploy Azure Firewall across multiple availability zones',\r\n        type =~ 'Microsoft.Storage/StorageAccounts', 'Move to ZRS/GZRS storage',\r\n        type =~ 'microsoft.web/serverfarms', 'Enable zone redundancy on App Service Plan',\r\n        type =~ 'microsoft.containerservice/managedclusters', 'Use multi-zone AKS node pools',\r\n        type =~ 'microsoft.containerregistry/registries', 'Enable ACR zone redundancy',\r\n        type =~ 'microsoft.apimanagement/service', 'Enable multi-zone API Management',\r\n        type =~ 'microsoft.servicebus/namespaces', 'Enable Service Bus zone redundancy',\r\n        type =~ 'microsoft.eventhub/namespaces', 'Enable Event Hub zone redundancy',\r\n        type =~ 'microsoft.cache/redis', 'Enable Redis zone redundancy',\r\n        type =~ 'microsoft.dbformysql/flexibleservers', 'Enable MySQL zone-redundant HA',\r\n        type =~ 'microsoft.dbforpostgresql/flexibleservers', 'Enable PostgreSQL zone-redundant HA',\r\n        type =~ 'microsoft.documentdb/databaseaccounts', 'Enable Cosmos DB zone redundancy',\r\n        type =~ 'microsoft.network/loadbalancers', 'Use zone-redundant Standard Load Balancer',\r\n        type =~ 'microsoft.network/virtualnetworkgateways', 'Use AZ SKU Virtual Network Gateway',\r\n        type =~ 'microsoft.network/publicipaddresses', 'Create / convert to zone-redundant Public IP',\r\n        type =~ 'microsoft.network/bastionhosts', 'Deploy Bastion host across zones',\r\n        type =~ 'Microsoft.NetApp/netAppAccounts/capacityPools/volumes', 'Review ANF multi-zone deployment',\r\n        type =~ 'microsoft.app/managedenvironments', 'Enable Container Apps env zone redundancy',\r\n        type =~ 'microsoft.compute/virtualmachinescalesets', 'Distribute VM Scale Set across zones',\r\n        '')\r\n    | extend\r\n        ImplementationImpact = case(Recommendation == 'Deploy VMs across Availability Zones', 'High', Recommendation == 'Use Azure Disks with Zone Redundant Storage', 'Medium', Recommendation == 'Enable multi-zone Application Gateway', 'Medium', Recommendation == 'Deploy Azure Firewall across multiple availability zones', 'Medium', Recommendation == 'Move to ZRS/GZRS storage', 'Low', Recommendation == 'Enable zone redundancy on App Service Plan', 'Low', Recommendation == 'Use multi-zone AKS node pools', 'Medium', Recommendation == 'Enable ACR zone redundancy', 'Low', Recommendation == 'Enable Service Bus zone redundancy', 'Medium', Recommendation == 'Enable Event Hub zone redundancy', 'Medium', Recommendation == 'Enable Redis zone redundancy', 'Medium', Recommendation == 'Enable MySQL zone-redundant HA', 'Medium', Recommendation == 'Enable PostgreSQL zone-redundant HA', 'Medium', Recommendation == 'Enable Cosmos DB zone redundancy', 'Medium', Recommendation == 'Use zone-redundant Standard Load Balancer', 'Low', Recommendation == 'Use AZ SKU Virtual Network Gateway', 'Medium', Recommendation == 'Create / convert to zone-redundant Public IP', 'Low', Recommendation == 'Deploy Bastion host across zones', 'Low', Recommendation == 'Review ANF multi-zone deployment', 'Medium', Recommendation == 'Enable Container Apps env zone redundancy', 'Low', Recommendation == 'Distribute VM Scale Set across zones', 'Medium', ''),\r\n        ImplementationComplexity = case(Recommendation == 'Deploy VMs across Availability Zones', 'Low', Recommendation == 'Use Azure Disks with Zone Redundant Storage', 'Medium', Recommendation == 'Enable multi-zone Application Gateway', 'Medium', Recommendation == 'Deploy Azure Firewall across multiple availability zones', 'Medium', Recommendation == 'Move to ZRS/GZRS storage', 'Low', Recommendation == 'Enable zone redundancy on App Service Plan', 'Low', Recommendation == 'Use multi-zone AKS node pools', 'Medium', Recommendation == 'Enable ACR zone redundancy', 'Low', Recommendation == 'Enable Service Bus zone redundancy', 'Medium', Recommendation == 'Enable Event Hub zone redundancy', 'Medium', Recommendation == 'Enable Redis zone redundancy', 'Medium', Recommendation == 'Enable MySQL zone-redundant HA', 'Medium', Recommendation == 'Enable PostgreSQL zone-redundant HA', 'Medium', Recommendation == 'Enable Cosmos DB zone redundancy', 'Medium', Recommendation == 'Use zone-redundant Standard Load Balancer', 'Low', Recommendation == 'Use AZ SKU Virtual Network Gateway', 'Medium', Recommendation == 'Create / convert to zone-redundant Public IP', 'Low', Recommendation == 'Deploy Bastion host across zones', 'Low', Recommendation == 'Review ANF multi-zone deployment', 'Medium', Recommendation == 'Enable Container Apps env zone redundancy', 'Low', Recommendation == 'Distribute VM Scale Set across zones', 'Medium', ''),\r\n        RecommendationId = case(Recommendation == 'Deploy VMs across Availability Zones', '2bd0be95-a825-6f47-a8c6-3db1fb5eb387', Recommendation == 'Use Azure Disks with Zone Redundant Storage', 'fa0cf4f5-0b21-47b7-89a9-ee936f193ce1', Recommendation == 'Enable multi-zone Application Gateway', '5c488377-be3e-4365-92e8-09d1e8d9038c', Recommendation == 'Deploy Azure Firewall across multiple availability zones', 'e82f5b61-b0f8-48e7-8e18-5aa1f57bff81', Recommendation == 'Move to ZRS/GZRS storage', 'e6c7e1cc-2f47-264d-aa50-1da421314472', Recommendation == 'Enable zone redundancy on App Service Plan', '88cb90c2-3b99-814b-9820-821a63f600dd', Recommendation == 'Use multi-zone AKS node pools', '9f3263db-b9c0-43bb-8523-6800f9f50793', Recommendation == 'Enable ACR zone redundancy', '63491f70-22e4-3b4a-8b0c-845450e46fac', Recommendation == 'Enable Service Bus zone redundancy', '9dff9f9b-1e61-4fbf-9168-c0432240c53b', Recommendation == 'Enable Event Hub zone redundancy', '0f1bfad1-1f47-44dd-a858-71cc2610b9d4', Recommendation == 'Enable Redis zone redundancy', '5a44bd30-ae6a-4b81-9b68-dc3a8ffca4d8', Recommendation == 'Enable MySQL zone-redundant HA', '88856605-53d8-4bbd-a75b-4a7b14939d32', Recommendation == 'Enable PostgreSQL zone-redundant HA', '80b4e93c-4500-4fbd-bd6f-3ec245f72be9', Recommendation == 'Enable Cosmos DB zone redundancy', '921631f6-ed59-49a5-94c1-f0f3ececa580', Recommendation == 'Use zone-redundant Standard Load Balancer', '332e07de-da0d-4ee7-b1c4-ca9016005e1d', Recommendation == 'Use AZ SKU Virtual Network Gateway', '1afa00b3-bb4c-496d-99e5-b7bda59a057c', Recommendation == 'Create / convert to zone-redundant Public IP', 'c63b81fb-7afc-894c-a840-91bb8a8dcfaf', Recommendation == 'Deploy Bastion host across zones', 'c9b0c6f6-1f64-4b4b-8165-00770b295dd7', Recommendation == 'Review ANF multi-zone deployment', '47d100a5-7f85-5742-967a-67eb5081240a', Recommendation == 'Enable Container Apps env zone redundancy', '8dbcd94b-0948-4df3-b608-1946726c3abf', Recommendation == 'Distribute VM Scale Set across zones', '1422c567-782c-7148-ac7c-5fc14cf45adc', '')\r\n    | where isnotempty(Recommendation)\r\n    | project id, type, Recommendation, RecommendationId, ImplementationImpact, ImplementationComplexity\r\n)\r\n| join kind=leftouter (\r\n    // Subquery to get the total count of all relevant resources by type\r\n    resources\r\n    | where resourceGroup in ({ResourceGroup}) and location in~ ({ZonalRegions}) and type in~ ('Microsoft.Compute/virtualMachines','Microsoft.Compute/disks','microsoft.network/azurefirewalls','microsoft.network/applicationGateways','Microsoft.Network/publicIPAddresses','microsoft.network/virtualnetworkgateways','microsoft.network/bastionhosts','microsoft.network/loadbalancers','microsoft.sql/servers/databases','microsoft.cache/redis','microsoft.dbformysql/flexibleservers','microsoft.dbforpostgresql/flexibleservers','Microsoft.Storage/StorageAccounts','Microsoft.NetApp/netAppAccounts/capacityPools/volumes','microsoft.compute/virtualmachinescalesets','microsoft.apimanagement/service','microsoft.servicebus/namespaces','microsoft.eventhub/namespaces','microsoft.web/serverfarms','microsoft.containerregistry/registries','microsoft.app/managedenvironments','microsoft.documentdb/databaseaccounts','microsoft.containerservice/managedclusters')\r\n    | summarize Total = count() by type\r\n) on type\r\n| summarize ImpactedCount = count() by RecommendationId, type, Recommendation, ImplementationImpact, ImplementationComplexity, Total\r\n| extend ImpactedResources = strcat(ImpactedCount, '/', Total)\r\n| project Recommendation, type, ImpactedResources, ImplementationImpact, ImplementationComplexity,RecommendationId\r\n| order by RecommendationId",
                    "size": 0,
                    "title": "Recommendation by Impact",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscription}"
                    ],
                    "visualization": "tiles",
                    "sortBy": [],
                    "tileSettings": {
                      "titleContent": {
                        "columnMatch": "Recommendation"
                      },
                      "subtitleContent": {
                        "columnMatch": "type"
                      },
                      "leftContent": {
                        "columnMatch": "ImpactedResources",
                        "formatter": 12,
                        "formatOptions": {
                          "palette": "auto"
                        },
                        "tooltipFormat": {
                          "tooltip": "Number of impacted resources / Total resources"
                        }
                      },
                      "secondaryContent": {
                        "columnMatch": "RecommendationId"
                      },
                      "showBorder": true,
                      "size": "auto",
                      "styleSettings": {
                        "borderStyle": "rounded"
                      }
                    }
                  },
                  "name": "visualImplementationImpact-Zone"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "(\r\n    // Subquery to find all non-compliant resources and their details\r\n    (\r\n        // Sub-subquery to analyze all resources and determine their zone status\r\n        resources\r\n        | where resourceGroup in ({ResourceGroup}) and location in~ ({ZonalRegions}) and type in~ ('Microsoft.Compute/virtualMachines','Microsoft.Compute/disks','microsoft.network/azurefirewalls','microsoft.network/applicationGateways','Microsoft.Network/publicIPAddresses','microsoft.network/virtualnetworkgateways','microsoft.network/bastionhosts','microsoft.network/loadbalancers','microsoft.sql/servers/databases','microsoft.cache/redis','microsoft.dbformysql/flexibleservers','microsoft.dbforpostgresql/flexibleservers','Microsoft.Storage/StorageAccounts','Microsoft.NetApp/netAppAccounts/capacityPools/volumes','microsoft.compute/virtualmachinescalesets','microsoft.apimanagement/service','microsoft.servicebus/namespaces','microsoft.eventhub/namespaces','microsoft.web/serverfarms','microsoft.containerregistry/registries','microsoft.app/managedenvironments')\r\n        | extend ZoneConfigured = case(\r\n            type =~ 'Microsoft.Compute/virtualMachines', array_length(coalesce(todynamic(zones), dynamic([]))) > 0,\r\n            type =~ 'Microsoft.Compute/disks', (tostring(sku.name) has_cs 'ZRS') or array_length(coalesce(todynamic(zones), dynamic([]))) > 0,\r\n            type =~ 'microsoft.network/azurefirewalls', array_length(coalesce(todynamic(zones), dynamic([]))) >= 2,\r\n            type =~ 'microsoft.network/applicationGateways', array_length(coalesce(todynamic(zones), dynamic([]))) >= 2,\r\n            type =~ 'Microsoft.Network/publicIPAddresses', array_length(coalesce(todynamic(zones), dynamic([]))) >= 2,\r\n            type =~ 'microsoft.network/virtualnetworkgateways', tostring(properties.sku.tier) contains 'AZ',\r\n            type =~ 'microsoft.network/bastionhosts', array_length(coalesce(todynamic(zones), dynamic([]))) >= 2,\r\n            type =~ 'microsoft.network/loadbalancers', tolower(tostring(sku.name)) != 'basic' and array_length(coalesce(todynamic(zones), dynamic([]))) >= 2,\r\n            type =~ 'microsoft.sql/servers/databases', tobool(properties.zoneRedundant),\r\n            type =~ 'microsoft.cache/redis', not(properties.zonalAllocationPolicy != 'Automatic' and (isnull(zones) or array_length(coalesce(todynamic(zones), dynamic([]))) <= 1)),\r\n            type =~ 'microsoft.dbformysql/flexibleservers', tostring(properties.highAvailability.mode) == 'ZoneRedundant',\r\n            type =~ 'microsoft.dbforpostgresql/flexibleservers', tostring(properties.highAvailability.mode) == 'ZoneRedundant',\r\n            type =~ 'Microsoft.Storage/StorageAccounts', tostring(sku.name) endswith_cs 'ZRS',\r\n            type =~ 'Microsoft.NetApp/netAppAccounts/capacityPools/volumes', array_length(coalesce(todynamic(zones), dynamic([]))) > 1,\r\n            type =~ 'microsoft.compute/virtualmachinescalesets', array_length(coalesce(todynamic(zones), dynamic([]))) > 1,\r\n            type =~ 'microsoft.apimanagement/service', array_length(coalesce(todynamic(zones), dynamic([]))) > 1,\r\n            type =~ 'microsoft.servicebus/namespaces', tobool(properties.zoneRedundant),\r\n            type =~ 'microsoft.eventhub/namespaces', tobool(properties.zoneRedundant),\r\n            type =~ 'microsoft.web/serverfarms', tobool(properties.zoneRedundant),\r\n            type =~ 'microsoft.containerregistry/registries', tostring(properties.zoneRedundancy) =~ 'Enabled',\r\n            type =~ 'microsoft.app/managedenvironments', tostring(properties.zoneRedundant) !~ 'false',\r\n            false)\r\n        | project id, type, ZoneConfigured\r\n    )\r\n    | union (\r\n        resources\r\n        | where resourceGroup in ({ResourceGroup}) and location in~ ({ZonalRegions}) and type =~ 'microsoft.documentdb/databaseaccounts'\r\n        | mv-expand loc = properties.locations | extend z = tobool(loc.isZoneRedundant) | summarize ZoneConfigured = max(z) by id, type\r\n    )\r\n    | union (\r\n        resources\r\n        | where resourceGroup in ({ResourceGroup}) and location in~ ({ZonalRegions}) and type =~ 'microsoft.containerservice/managedclusters'\r\n        | mv-expand pool = properties.agentPoolProfiles | extend z = array_length(coalesce(pool.availabilityZones, dynamic([]))) > 1 | summarize ZoneConfigured = max(z) by id, type\r\n    )\r\n    | where not(ZoneConfigured)\r\n    | extend Recommendation = case(\r\n        type =~ 'Microsoft.Compute/virtualmachines', 'Deploy VMs across Availability Zones',\r\n        type =~ 'Microsoft.Compute/disks', 'Use Azure Disks with Zone Redundant Storage',\r\n        type =~ 'microsoft.network/applicationGateways', 'Enable multi-zone Application Gateway',\r\n        type =~ 'microsoft.network/azurefirewalls', 'Deploy Azure Firewall across multiple availability zones',\r\n        type =~ 'Microsoft.Storage/StorageAccounts', 'Move to ZRS/GZRS storage',\r\n        type =~ 'microsoft.web/serverfarms', 'Enable zone redundancy on App Service Plan',\r\n        type =~ 'microsoft.containerservice/managedclusters', 'Use multi-zone AKS node pools',\r\n        type =~ 'microsoft.containerregistry/registries', 'Enable ACR zone redundancy',\r\n        type =~ 'microsoft.apimanagement/service', 'Enable multi-zone API Management',\r\n        type =~ 'microsoft.servicebus/namespaces', 'Enable Service Bus zone redundancy',\r\n        type =~ 'microsoft.eventhub/namespaces', 'Enable Event Hub zone redundancy',\r\n        type =~ 'microsoft.cache/redis', 'Enable Redis zone redundancy',\r\n        type =~ 'microsoft.dbformysql/flexibleservers', 'Enable MySQL zone-redundant HA',\r\n        type =~ 'microsoft.dbforpostgresql/flexibleservers', 'Enable PostgreSQL zone-redundant HA',\r\n        type =~ 'microsoft.documentdb/databaseaccounts', 'Enable Cosmos DB zone redundancy',\r\n        type =~ 'microsoft.network/loadbalancers', 'Use zone-redundant Standard Load Balancer',\r\n        type =~ 'microsoft.network/virtualnetworkgateways', 'Use AZ SKU Virtual Network Gateway',\r\n        type =~ 'microsoft.network/publicipaddresses', 'Create / convert to zone-redundant Public IP',\r\n        type =~ 'microsoft.network/bastionhosts', 'Deploy Bastion host across zones',\r\n        type =~ 'Microsoft.NetApp/netAppAccounts/capacityPools/volumes', 'Review ANF multi-zone deployment',\r\n        type =~ 'microsoft.app/managedenvironments', 'Enable Container Apps env zone redundancy',\r\n        type =~ 'microsoft.compute/virtualmachinescalesets', 'Distribute VM Scale Set across zones',\r\n        '')\r\n    | extend\r\n        ImplementationImpact = case(Recommendation == 'Deploy VMs across Availability Zones', 'High', Recommendation == 'Use Azure Disks with Zone Redundant Storage', 'Medium', Recommendation == 'Enable multi-zone Application Gateway', 'Medium', Recommendation == 'Deploy Azure Firewall across multiple availability zones', 'Medium', Recommendation == 'Move to ZRS/GZRS storage', 'Low', Recommendation == 'Enable zone redundancy on App Service Plan', 'Low', Recommendation == 'Use multi-zone AKS node pools', 'Medium', Recommendation == 'Enable ACR zone redundancy', 'Low', Recommendation == 'Enable Service Bus zone redundancy', 'Medium', Recommendation == 'Enable Event Hub zone redundancy', 'Medium', Recommendation == 'Enable Redis zone redundancy', 'Medium', Recommendation == 'Enable MySQL zone-redundant HA', 'Medium', Recommendation == 'Enable PostgreSQL zone-redundant HA', 'Medium', Recommendation == 'Enable Cosmos DB zone redundancy', 'Medium', Recommendation == 'Use zone-redundant Standard Load Balancer', 'Low', Recommendation == 'Use AZ SKU Virtual Network Gateway', 'Medium', Recommendation == 'Create / convert to zone-redundant Public IP', 'Low', Recommendation == 'Deploy Bastion host across zones', 'Low', Recommendation == 'Review ANF multi-zone deployment', 'Medium', Recommendation == 'Enable Container Apps env zone redundancy', 'Low', Recommendation == 'Distribute VM Scale Set across zones', 'Medium', ''),\r\n        ImplementationComplexity = case(Recommendation == 'Deploy VMs across Availability Zones', 'Low', Recommendation == 'Use Azure Disks with Zone Redundant Storage', 'Medium', Recommendation == 'Enable multi-zone Application Gateway', 'Medium', Recommendation == 'Deploy Azure Firewall across multiple availability zones', 'Medium', Recommendation == 'Move to ZRS/GZRS storage', 'Low', Recommendation == 'Enable zone redundancy on App Service Plan', 'Low', Recommendation == 'Use multi-zone AKS node pools', 'Medium', Recommendation == 'Enable ACR zone redundancy', 'Low', Recommendation == 'Enable Service Bus zone redundancy', 'Medium', Recommendation == 'Enable Event Hub zone redundancy', 'Medium', Recommendation == 'Enable Redis zone redundancy', 'Medium', Recommendation == 'Enable MySQL zone-redundant HA', 'Medium', Recommendation == 'Enable PostgreSQL zone-redundant HA', 'Medium', Recommendation == 'Enable Cosmos DB zone redundancy', 'Medium', Recommendation == 'Use zone-redundant Standard Load Balancer', 'Low', Recommendation == 'Use AZ SKU Virtual Network Gateway', 'Medium', Recommendation == 'Create / convert to zone-redundant Public IP', 'Low', Recommendation == 'Deploy Bastion host across zones', 'Low', Recommendation == 'Review ANF multi-zone deployment', 'Medium', Recommendation == 'Enable Container Apps env zone redundancy', 'Low', Recommendation == 'Distribute VM Scale Set across zones', 'Medium', ''),\r\n        RecommendationId = case(Recommendation == 'Deploy VMs across Availability Zones', '2bd0be95-a825-6f47-a8c6-3db1fb5eb387', Recommendation == 'Use Azure Disks with Zone Redundant Storage', 'fa0cf4f5-0b21-47b7-89a9-ee936f193ce1', Recommendation == 'Enable multi-zone Application Gateway', '5c488377-be3e-4365-92e8-09d1e8d9038c', Recommendation == 'Deploy Azure Firewall across multiple availability zones', 'e82f5b61-b0f8-48e7-8e18-5aa1f57bff81', Recommendation == 'Move to ZRS/GZRS storage', 'e6c7e1cc-2f47-264d-aa50-1da421314472', Recommendation == 'Enable zone redundancy on App Service Plan', '88cb90c2-3b99-814b-9820-821a63f600dd', Recommendation == 'Use multi-zone AKS node pools', '9f3263db-b9c0-43bb-8523-6800f9f50793', Recommendation == 'Enable ACR zone redundancy', '63491f70-22e4-3b4a-8b0c-845450e46fac', Recommendation == 'Enable Service Bus zone redundancy', '9dff9f9b-1e61-4fbf-9168-c0432240c53b', Recommendation == 'Enable Event Hub zone redundancy', '0f1bfad1-1f47-44dd-a858-71cc2610b9d4', Recommendation == 'Enable Redis zone redundancy', '5a44bd30-ae6a-4b81-9b68-dc3a8ffca4d8', Recommendation == 'Enable MySQL zone-redundant HA', '88856605-53d8-4bbd-a75b-4a7b14939d32', Recommendation == 'Enable PostgreSQL zone-redundant HA', '80b4e93c-4500-4fbd-bd6f-3ec245f72be9', Recommendation == 'Enable Cosmos DB zone redundancy', '921631f6-ed59-49a5-94c1-f0f3ececa580', Recommendation == 'Use zone-redundant Standard Load Balancer', '332e07de-da0d-4ee7-b1c4-ca9016005e1d', Recommendation == 'Use AZ SKU Virtual Network Gateway', '1afa00b3-bb4c-496d-99e5-b7bda59a057c', Recommendation == 'Create / convert to zone-redundant Public IP', 'c63b81fb-7afc-894c-a840-91bb8a8dcfaf', Recommendation == 'Deploy Bastion host across zones', 'c9b0c6f6-1f64-4b4b-8165-00770b295dd7', Recommendation == 'Review ANF multi-zone deployment', '47d100a5-7f85-5742-967a-67eb5081240a', Recommendation == 'Enable Container Apps env zone redundancy', '8dbcd94b-0948-4df3-b608-1946726c3abf', Recommendation == 'Distribute VM Scale Set across zones', '1422c567-782c-7148-ac7c-5fc14cf45adc', '')\r\n    | where isnotempty(Recommendation)\r\n    | project id, type, Recommendation, RecommendationId, ImplementationImpact, ImplementationComplexity\r\n)\r\n| join kind=leftouter (\r\n    // Subquery to get the total count of all relevant resources by type\r\n    resources\r\n    | where resourceGroup in ({ResourceGroup}) and location in~ ({ZonalRegions}) and type in~ ('Microsoft.Compute/virtualMachines','Microsoft.Compute/disks','microsoft.network/azurefirewalls','microsoft.network/applicationGateways','Microsoft.Network/publicIPAddresses','microsoft.network/virtualnetworkgateways','microsoft.network/bastionhosts','microsoft.network/loadbalancers','microsoft.sql/servers/databases','microsoft.cache/redis','microsoft.dbformysql/flexibleservers','microsoft.dbforpostgresql/flexibleservers','Microsoft.Storage/StorageAccounts','Microsoft.NetApp/netAppAccounts/capacityPools/volumes','microsoft.compute/virtualmachinescalesets','microsoft.apimanagement/service','microsoft.servicebus/namespaces','microsoft.eventhub/namespaces','microsoft.web/serverfarms','microsoft.containerregistry/registries','microsoft.app/managedenvironments','microsoft.documentdb/databaseaccounts','microsoft.containerservice/managedclusters')\r\n    | summarize Total = count() by type\r\n) on type\r\n| summarize ImpactedCount = count() by RecommendationId, type, Recommendation, ImplementationImpact, ImplementationComplexity, Total\r\n| extend ImpactedResources = strcat(ImpactedCount, '/', Total)\r\n| project Recommendation, type, ImpactedResources, ImplementationImpact, ImplementationComplexity,RecommendationId\r\n| order by RecommendationId",
                    "size": 0,
                    "showAnalytics": true,
                    "title": "Multi zone recommendations",
                    "showRefreshButton": true,
                    "showExportToExcel": true,
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscription}"
                    ],
                    "gridSettings": {
                      "sortBy": [
                        {
                          "itemKey": "ImplementationComplexity",
                          "sortOrder": 1
                        }
                      ]
                    },
                    "sortBy": [
                      {
                        "itemKey": "ImplementationComplexity",
                        "sortOrder": 1
                      }
                    ]
                  },
                  "name": "Executive insights-zone"
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "SelectedSubTab",
              "comparison": "isEqualTo",
              "value": "Overview"
            },
            "name": "groupZoneOverview"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 1,
                  "content": {
                    "json": "# Workload Availability Zones Coverage Details\r\n\r\n>NOTE: You will find detailed insights into your scoped workloads specific configuration relating to Availability Zones. ",
                    "style": "upsell"
                  },
                  "name": "text - 6"
                },
                {
                  "type": 11,
                  "content": {
                    "version": "LinkItem/1.0",
                    "style": "tabs",
                    "links": [
                      {
                        "id": "b95af288-2738-4afa-87b9-eed0f729f3fe",
                        "cellValue": "selectedDetailsTab",
                        "linkTarget": "parameter",
                        "linkLabel": "Network Services",
                        "subTarget": "network",
                        "style": "link"
                      },
                      {
                        "id": "847aefe6-be4a-4033-85e0-c74ab570ad1e",
                        "cellValue": "selectedDetailsTab",
                        "linkTarget": "parameter",
                        "linkLabel": "Data Services",
                        "subTarget": "Data",
                        "style": "link"
                      },
                      {
                        "id": "499fa94f-a180-4cbb-8a77-79a43a965d0e",
                        "cellValue": "selectedDetailsTab",
                        "linkTarget": "parameter",
                        "linkLabel": "Storage Services",
                        "subTarget": "storage",
                        "style": "link"
                      },
                      {
                        "id": "866bc76f-c9f2-4bec-a5a1-7893fd298179",
                        "cellValue": "selectedDetailsTab",
                        "linkTarget": "parameter",
                        "linkLabel": "Compute Services",
                        "subTarget": "compute",
                        "preText": "Compute",
                        "style": "link"
                      },
                      {
                        "id": "ac71eb6a-a601-4d10-a6ae-7a5a0cecc4da",
                        "cellValue": "selectedDetailsTab",
                        "linkTarget": "parameter",
                        "linkLabel": "Integration Services",
                        "subTarget": "integrationServices",
                        "style": "link"
                      },
                      {
                        "id": "f7fe5554-b6cd-41e1-ba69-6b480ea4db15",
                        "cellValue": "selectedDetailsTab",
                        "linkTarget": "parameter",
                        "linkLabel": "App Services",
                        "subTarget": "app",
                        "style": "link"
                      },
                      {
                        "id": "6bb1d5e2-1063-49c5-943a-f61f94e98271",
                        "cellValue": "selectedDetailsTab",
                        "linkTarget": "parameter",
                        "linkLabel": "Container Services",
                        "subTarget": "containerServices",
                        "style": "link"
                      }
                    ]
                  },
                  "name": "links - 4"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "title": "Azure Networking Services Availability Zone Coverage",
                    "items": [
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "resources\r\n| where resourceGroup in ({ResourceGroup})\r\n| where type == 'microsoft.network/azurefirewalls'\r\n| where location in~ ({ZonalRegions:value})\r\n| extend resourceGroup = strcat('/subscriptions/',subscriptionId,'/resourceGroups/',resourceGroup)\r\n| extend subscriptionId = strcat('/subscriptions/',subscriptionId)\r\n| extend locations=properties.locations\r\n| extend zoneRedundant = iif(array_length(zones) >= 2, \"true\", \"false\")\r\n| join kind = innerunique( //Tag filter\r\n    resources\r\n    | extend replaced_tags = replace('{}', 'null', tostring(tags))\r\n    | extend replaced_tags = parse_json(replaced_tags)\r\n    | mv-expand replaced_tags\r\n    | extend tagName = tostring(bag_keys(replaced_tags)[0])\r\n    | extend tagValue = tostring(replaced_tags['{TagName}']), WindowsId=id\r\n    | where tagName has '{TagName}' and tagValue has '{TagValue}'\r\n    )\r\n    on id\r\n| distinct id,name,zoneRedundant,resourceGroup,subscriptionId,location,tostring(tags)",
                          "size": 0,
                          "title": "Azure Firewalls",
                          "noDataMessage": "All Azure Firewalls have availabilty zones configured",
                          "noDataMessageStyle": 3,
                          "queryType": 1,
                          "resourceType": "microsoft.resourcegraph/resources",
                          "crossComponentResources": [
                            "{Subscription}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "zoneRedundant",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "true",
                                      "representation": "success",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "failed",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        },
                        "name": "query-azFW"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "resources\r\n| where resourceGroup in ({ResourceGroup})\r\n| where type =~ \"microsoft.network/applicationGateways\"\r\n| where location in~ ({ZonalRegions:value})\r\n| extend resourceGroup = strcat('/subscriptions/',subscriptionId,'/resourceGroups/',resourceGroup)\r\n| extend subscriptionId = strcat('/subscriptions/',subscriptionId)\r\n| extend locations=properties.locations\r\n| extend zoneRedundant = iif(array_length(zones) >= 2, \"true\", \"false\")\r\n| join kind = innerunique( //Tag filter\r\n    resources\r\n    | extend replaced_tags = replace('{}', 'null', tostring(tags))\r\n    | extend replaced_tags = parse_json(replaced_tags)\r\n    | mv-expand replaced_tags\r\n    | extend tagName = tostring(bag_keys(replaced_tags)[0])\r\n    | extend tagValue = tostring(replaced_tags['{TagName}']), WindowsId=id\r\n    | where tagName has '{TagName}' and tagValue has '{TagValue}'\r\n    )\r\n    on id\r\n| distinct id,name,zoneRedundant,resourceGroup,subscriptionId,location,tostring(tags)",
                          "size": 0,
                          "title": "Application Gateways",
                          "noDataMessage": "All Application Gateways have availability zones configured",
                          "noDataMessageStyle": 3,
                          "queryType": 1,
                          "resourceType": "microsoft.resourcegraph/resources",
                          "crossComponentResources": [
                            "{Subscription}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "zoneRedundant",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "true",
                                      "representation": "success",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "failed",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        },
                        "name": "query-app-gateways"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "resources\r\n| where resourceGroup in ({ResourceGroup})\r\n| where type =~ \"Microsoft.Network/publicIPAddresses\"\r\n| where location in~ ({ZonalRegions:value})\r\n| extend resourceGroup = strcat('/subscriptions/',subscriptionId,'/resourceGroups/',resourceGroup)\r\n| extend subscriptionId = strcat('/subscriptions/',subscriptionId)\r\n| extend locations=properties.locations\r\n|extend zones = zones\r\n| extend zoneRedundant = iif(array_length(zones) >= 2, \"true\", \"false\")\r\n| join kind = innerunique( //Tag filter\r\n    resources\r\n    | extend replaced_tags = replace('{}', 'null', tostring(tags))\r\n    | extend replaced_tags = parse_json(replaced_tags)\r\n    | mv-expand replaced_tags\r\n    | extend tagName = tostring(bag_keys(replaced_tags)[0])\r\n    | extend tagValue = tostring(replaced_tags['{TagName}']), WindowsId=id\r\n    | where tagName has '{TagName}' and tagValue has '{TagValue}'\r\n    )\r\n    on id\r\n| distinct id,name,zoneRedundant,resourceGroup,subscriptionId,location,tostring(tags)",
                          "size": 0,
                          "title": "Azure Public IPs",
                          "noDataMessage": "All Azure Public IPs have availability zones configured",
                          "noDataMessageStyle": 3,
                          "queryType": 1,
                          "resourceType": "microsoft.resourcegraph/resources",
                          "crossComponentResources": [
                            "{Subscription}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "zoneRedundant",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "false",
                                      "representation": "failed",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "success",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        },
                        "name": "query-publicIPs"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "resources\r\n| where resourceGroup in ({ResourceGroup})\r\n| where type =~ \"microsoft.network/virtualnetworkgateways\"\r\n| where location in~ ({ZonalRegions:value})\r\n| extend resourceGroup = strcat('/subscriptions/',subscriptionId,'/resourceGroups/',resourceGroup)\r\n| extend subscriptionId = strcat('/subscriptions/',subscriptionId)\r\n| extend skuName = tostring(properties.sku.tier)\r\n| extend locations=properties.locations\r\n| extend zoneRedundant = iif(skuName contains 'AZ', \"true\", \"false\")\r\n| join kind = innerunique( //Tag filter\r\n    resources\r\n    | extend replaced_tags = replace('{}', 'null', tostring(tags))\r\n    | extend replaced_tags = parse_json(replaced_tags)\r\n    | mv-expand replaced_tags\r\n    | extend tagName = tostring(bag_keys(replaced_tags)[0])\r\n    | extend tagValue = tostring(replaced_tags['{TagName}']), WindowsId=id\r\n    | where tagName has '{TagName}' and tagValue has '{TagValue}'\r\n    )\r\n    on id\r\n| distinct id,name,zoneRedundant,resourceGroup,subscriptionId,location,tostring(tags)",
                          "size": 0,
                          "title": "Azure Virtual Network Gateways",
                          "noDataMessage": "All Azure Virtual Network Gateways have availability zones configured",
                          "noDataMessageStyle": 3,
                          "queryType": 1,
                          "resourceType": "microsoft.resourcegraph/resources",
                          "crossComponentResources": [
                            "{Subscription}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "zoneRedundant",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "false",
                                      "representation": "failed",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "success",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              }
                            ],
                            "rowLimit": 1000,
                            "filter": true
                          }
                        },
                        "name": "query-virtual-network-gateway-zones"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "resources\r\n| where resourceGroup in ({ResourceGroup})\r\n| where type =~ \"microsoft.network/bastionhosts\"\r\n| where location in~ ({ZonalRegions:value})\r\n| extend resourceGroup = strcat('/subscriptions/',subscriptionId,'/resourceGroups/',resourceGroup)\r\n| extend subscriptionId = strcat('/subscriptions/',subscriptionId)\r\n| extend locations=properties.locations\r\n|extend zones = zones\r\n| extend zoneRedundant = iif(array_length(zones) >= 2, \"true\", \"false\")\r\n| join kind = innerunique( //Tag filter\r\n    resources\r\n    | extend replaced_tags = replace('{}', 'null', tostring(tags))\r\n    | extend replaced_tags = parse_json(replaced_tags)\r\n    | mv-expand replaced_tags\r\n    | extend tagName = tostring(bag_keys(replaced_tags)[0])\r\n    | extend tagValue = tostring(replaced_tags['{TagName}']), WindowsId=id\r\n    | where tagName has '{TagName}' and tagValue has '{TagValue}'\r\n    )\r\n    on id\r\n| distinct id,name,zoneRedundant,resourceGroup,subscriptionId,location,tostring(tags)",
                          "size": 0,
                          "title": "Azure Bastion Hosts",
                          "noDataMessage": "All Azure Bastion Hosts have availability zones configured",
                          "noDataMessageStyle": 3,
                          "queryType": 1,
                          "resourceType": "microsoft.resourcegraph/resources",
                          "crossComponentResources": [
                            "{Subscription}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "zoneRedundant",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "false",
                                      "representation": "failed",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "success",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              }
                            ],
                            "rowLimit": 1000
                          }
                        },
                        "name": "query-bastion-zone-details"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "resources\r\n| where resourceGroup in ({ResourceGroup})\r\n| where type =~ \"microsoft.network/loadbalancers\" and tolower(sku.name) != 'basic'\r\n| where location in~ ({ZonalRegions:value})\r\n| extend resourceGroup = strcat('/subscriptions/',subscriptionId,'/resourceGroups/',resourceGroup)\r\n| extend subscriptionId = strcat('/subscriptions/',subscriptionId)\r\n| extend locations=properties.locations\r\n|extend zones = zones\r\n| extend zoneRedundant = iif(array_length(zones) >= 2, \"true\", \"false\")\r\n| join kind = innerunique( //Tag filter\r\n    resources\r\n    | extend replaced_tags = replace('{}', 'null', tostring(tags))\r\n    | extend replaced_tags = parse_json(replaced_tags)\r\n    | mv-expand replaced_tags\r\n    | extend tagName = tostring(bag_keys(replaced_tags)[0])\r\n    | extend tagValue = tostring(replaced_tags['{TagName}']), WindowsId=id\r\n    | where tagName has '{TagName}' and tagValue has '{TagValue}'\r\n    )\r\n    on id\r\n| distinct id,name,zoneRedundant,resourceGroup,subscriptionId,location,tostring(tags)",
                          "size": 0,
                          "title": "Azure Standard Load Balancer",
                          "noDataMessage": "All Azure Standard Load Balanacers have availability zones configured",
                          "noDataMessageStyle": 3,
                          "queryType": 1,
                          "resourceType": "microsoft.resourcegraph/resources",
                          "crossComponentResources": [
                            "{Subscription}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "zoneRedundant",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "false",
                                      "representation": "failed",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "success",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              }
                            ],
                            "rowLimit": 1000
                          }
                        },
                        "name": "query-load-balancer-zone-details"
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "selectedDetailsTab",
                    "comparison": "isEqualTo",
                    "value": "network"
                  },
                  "name": "group-networking-details"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "title": "Data Service Availability Zone Coverage",
                    "items": [
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "resources\r\n| where resourceGroup in ({ResourceGroup})\r\n| where type =~ 'microsoft.sql/servers/databases'\r\n| where location in~ ({ZonalRegions:value})\r\n| extend resourceGroup = strcat('/subscriptions/',subscriptionId,'/resourceGroups/',resourceGroup)\r\n| extend subscriptionId = strcat('/subscriptions/',subscriptionId)\r\n| extend locations=properties.locations\r\n| extend zoneRedundant = tobool(properties.zoneRedundant)\r\n| join kind = innerunique( //Tag filter\r\n    resources\r\n    | extend replaced_tags = replace('{}', 'null', tostring(tags))\r\n    | extend replaced_tags = parse_json(replaced_tags)\r\n    | mv-expand replaced_tags\r\n    | extend tagName = tostring(bag_keys(replaced_tags)[0])\r\n    | extend tagValue = tostring(replaced_tags['{TagName}']), WindowsId=id\r\n    | where tagName has '{TagName}' and tagValue has '{TagValue}'\r\n    )\r\n    on id\r\n| distinct id,name,zoneRedundant,resourceGroup,subscriptionId,location,tostring(tags)",
                          "size": 0,
                          "title": "Azure SQL Server",
                          "noDataMessage": "All Azure SQL Servers have availability zones configured",
                          "noDataMessageStyle": 3,
                          "queryType": 1,
                          "resourceType": "microsoft.resourcegraph/resources",
                          "crossComponentResources": [
                            "{Subscription}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "zoneRedundant",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "1",
                                      "representation": "success",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "failed",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        },
                        "name": "query-az-sql-zones-details"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "resources\r\n| where resourceGroup in ({ResourceGroup})\r\n| where type =~ 'microsoft.documentdb/databaseaccounts'\r\n| where location in~ ({ZonalRegions:value})\r\n| extend resourceGroup = strcat('/subscriptions/',subscriptionId,'/resourceGroups/',resourceGroup)\r\n| extend subscriptionId = strcat('/subscriptions/',subscriptionId)\r\n| extend locations=properties.locations\r\n| mv-expand cosmosLocation = locations\r\n| extend zones=cosmosLocation.isZoneRedundant\r\n| extend zoneRedundant = case(\r\n    not(zones), false, true \r\n  )\r\n| join kind = innerunique( //Tag filter\r\n    resources\r\n    | extend replaced_tags = replace('{}', 'null', tostring(tags))\r\n    | extend replaced_tags = parse_json(replaced_tags)\r\n    | mv-expand replaced_tags\r\n    | extend tagName = tostring(bag_keys(replaced_tags)[0])\r\n    | extend tagValue = tostring(replaced_tags['{TagName}']), WindowsId=id\r\n    | where tagName has '{TagName}' and tagValue has '{TagValue}'\r\n    )\r\n    on id\r\n| distinct id,name,zoneRedundant,resourceGroup,subscriptionId,location,tostring(tags)",
                          "size": 0,
                          "title": "Azure Cosmos DB",
                          "noDataMessage": "All Azure Cosmos DB instances have availability zones configured",
                          "noDataMessageStyle": 3,
                          "queryType": 1,
                          "resourceType": "microsoft.resourcegraph/resources",
                          "crossComponentResources": [
                            "{Subscription}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "pinnedZone",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "1",
                                      "representation": "success",
                                      "text": ""
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "4",
                                      "text": ""
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "zoneRedundant",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "1",
                                      "representation": "success",
                                      "text": ""
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "4",
                                      "text": ""
                                    }
                                  ]
                                }
                              }
                            ],
                            "rowLimit": 1000
                          },
                          "sortBy": []
                        },
                        "name": "query-documentdb-zones-details"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "resources\r\n| where resourceGroup in ({ResourceGroup})\r\n| where type =~ 'microsoft.cache/redis'\r\n| where location in~ ({ZonalRegions:value})\r\n| extend resourceGroup = strcat('/subscriptions/',subscriptionId,'/resourceGroups/',resourceGroup)\r\n| extend subscriptionId = strcat('/subscriptions/',subscriptionId)\r\n| extend zoneRedundant = case(\r\n    properties.zonalAllocationPolicy != \"Automatic\" and (array_length(zones) <= 1 or isnull(zones)), false, \r\n    true \r\n  )\r\n| join kind = innerunique( //Tag filter\r\n    resources\r\n    | extend replaced_tags = replace('{}', 'null', tostring(tags))\r\n    | extend replaced_tags = parse_json(replaced_tags)\r\n    | mv-expand replaced_tags\r\n    | extend tagName = tostring(bag_keys(replaced_tags)[0])\r\n    | extend tagValue = tostring(replaced_tags['{TagName}']), WindowsId=id\r\n    | where tagName has '{TagName}' and tagValue has '{TagValue}'\r\n    )\r\n    on id\r\n| project id,name,zoneRedundant,tostring(zones),resourceGroup,subscriptionId,location,tags",
                          "size": 0,
                          "title": "Azure Cache for Redis",
                          "noDataMessage": "All Azure Cache for Redis instances have availability zones configured",
                          "noDataMessageStyle": 3,
                          "queryType": 1,
                          "resourceType": "microsoft.resourcegraph/resources",
                          "crossComponentResources": [
                            "{Subscription}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "pinnedZone",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "1",
                                      "representation": "success",
                                      "text": ""
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "4",
                                      "text": ""
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "zoneRedundant",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "1",
                                      "representation": "success",
                                      "text": ""
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "4",
                                      "text": ""
                                    }
                                  ]
                                }
                              }
                            ],
                            "rowLimit": 1000
                          },
                          "sortBy": []
                        },
                        "name": "query-cache-zones-details"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "resources\r\n| where type =~ 'microsoft.dbformysql/flexibleservers'\r\n| where location in~ ({ZonalRegions:value})\r\n| extend resourceGroup = strcat('/subscriptions/',subscriptionId,'/resourceGroups/',resourceGroup)\r\n| extend subscriptionId = strcat('/subscriptions/',subscriptionId)\r\n| extend zones = properties.highAvailability.mode\r\n| extend zoneRedundant = case(\r\n    zones != \"ZoneRedundant\" , false,  true \r\n  )\r\n| join kind = innerunique( //Tag filter\r\n    resources\r\n    | extend replaced_tags = replace('{}', 'null', tostring(tags))\r\n    | extend replaced_tags = parse_json(replaced_tags)\r\n    | mv-expand replaced_tags\r\n    | extend tagName = tostring(bag_keys(replaced_tags)[0])\r\n    | extend tagValue = tostring(replaced_tags['{TagName}']), WindowsId=id\r\n    | where tagName has '{TagName}' and tagValue has '{TagValue}'\r\n    )\r\n    on id\r\n| project id,name,zoneRedundant,tostring(zones),resourceGroup,subscriptionId,location,tags",
                          "size": 0,
                          "title": "Azure Database for MySQL - Flexible Server",
                          "noDataMessage": "All Azure Database for MySQL - Flexible Server instances have availability zones configured",
                          "noDataMessageStyle": 3,
                          "queryType": 1,
                          "resourceType": "microsoft.resourcegraph/resources",
                          "crossComponentResources": [
                            "{Subscription}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "pinnedZone",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "1",
                                      "representation": "success",
                                      "text": ""
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "4",
                                      "text": ""
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "zoneRedundant",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "1",
                                      "representation": "success",
                                      "text": ""
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "4",
                                      "text": ""
                                    }
                                  ]
                                }
                              }
                            ],
                            "rowLimit": 1000
                          },
                          "sortBy": []
                        },
                        "name": "query-dbformysql-zones-details"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "resources\r\n| where type =~ 'microsoft.dbforpostgresql/flexibleservers'\r\n| where location in~ ({ZonalRegions:value})\r\n| extend resourceGroup = strcat('/subscriptions/',subscriptionId,'/resourceGroups/',resourceGroup)\r\n| extend subscriptionId = strcat('/subscriptions/',subscriptionId)\r\n| extend zones = properties.highAvailability.mode\r\n| extend zoneRedundant = case(\r\n    zones != \"ZoneRedundant\" , false,  true \r\n  )\r\n| join kind = innerunique( //Tag filter\r\n    resources\r\n    | extend replaced_tags = replace('{}', 'null', tostring(tags))\r\n    | extend replaced_tags = parse_json(replaced_tags)\r\n    | mv-expand replaced_tags\r\n    | extend tagName = tostring(bag_keys(replaced_tags)[0])\r\n    | extend tagValue = tostring(replaced_tags['{TagName}']), WindowsId=id\r\n    | where tagName has '{TagName}' and tagValue has '{TagValue}'\r\n    )\r\n    on id\r\n| project id,name,zoneRedundant,tostring(zones),resourceGroup,subscriptionId,location,tags",
                          "size": 0,
                          "title": "Azure Database for PostgreSQL - Flexible Server",
                          "noDataMessage": "All Azure Database for PostgreSQL - Flexible Server instances have availability zones configured",
                          "noDataMessageStyle": 3,
                          "queryType": 1,
                          "resourceType": "microsoft.resourcegraph/resources",
                          "crossComponentResources": [
                            "{Subscription}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "pinnedZone",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "1",
                                      "representation": "success",
                                      "text": ""
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "4",
                                      "text": ""
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "zoneRedundant",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "1",
                                      "representation": "success",
                                      "text": ""
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "4",
                                      "text": ""
                                    }
                                  ]
                                }
                              }
                            ],
                            "rowLimit": 1000
                          },
                          "sortBy": []
                        },
                        "name": "query-dbforpostgresql-zones-details"
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "selectedDetailsTab",
                    "comparison": "isEqualTo",
                    "value": "Data"
                  },
                  "name": "group - Details-Data"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "title": "Storage Availability Zone Coverage",
                    "items": [
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "resources\r\n| where resourceGroup in ({ResourceGroup})\r\n| where type =~ 'Microsoft.Storage/StorageAccounts'\r\n| where location in~ ({ZonalRegions:value})\r\n| extend resourceGroup = strcat('/subscriptions/',subscriptionId,'/resourceGroups/',resourceGroup)\r\n| extend subscriptionId = strcat('/subscriptions/',subscriptionId)\r\n| extend locations=properties.locations\r\n| extend skuName = tostring(sku.name)\r\n| extend zoneRedundant = case(\r\n    sku.name endswith_cs 'ZRS', true, \r\n    false\r\n  )\r\n| join kind = innerunique( //Tag filter\r\n    resources\r\n    | extend replaced_tags = replace('{}', 'null', tostring(tags))\r\n    | extend replaced_tags = parse_json(replaced_tags)\r\n    | mv-expand replaced_tags\r\n    | extend tagName = tostring(bag_keys(replaced_tags)[0])\r\n    | extend tagValue = tostring(replaced_tags['{TagName}']), WindowsId=id\r\n    | where tagName has '{TagName}' and tagValue has '{TagValue}'\r\n    )\r\n    on id\r\n| distinct id,name,skuName,zoneRedundant,resourceGroup,subscriptionId,location,tostring(tags)",
                          "size": 0,
                          "title": "Azure Storage Accounts",
                          "noDataMessage": "All Azure Storage Accounts are zone redundant",
                          "noDataMessageStyle": 3,
                          "queryType": 1,
                          "resourceType": "microsoft.resourcegraph/resources",
                          "crossComponentResources": [
                            "{Subscription}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "zoneRedundant",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "1",
                                      "representation": "success",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "failed",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        },
                        "name": "query-storageaccounts-zones-details"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "resources\r\n| where resourceGroup in ({ResourceGroup})\r\n| where type =~ \"Microsoft.NetApp/netAppAccounts/capacityPools/volumes\"\r\n| where location in~ ({ZonalRegions:value})\r\n| extend resourceGroup = strcat('/subscriptions/',subscriptionId,'/resourceGroups/',resourceGroup)\r\n| extend subscriptionId = strcat('/subscriptions/',subscriptionId)\r\n| extend locations=properties.locations\r\n| extend zoneRedundant = case(\r\n    isnull(zones) or array_length(zones) <= 1, false, \r\n    true \r\n  )\r\n| join kind = innerunique( //Tag filter\r\n    resources\r\n    | extend replaced_tags = replace('{}', 'null', tostring(tags))\r\n    | extend replaced_tags = parse_json(replaced_tags)\r\n    | mv-expand replaced_tags\r\n    | extend tagName = tostring(bag_keys(replaced_tags)[0])\r\n    | extend tagValue = tostring(replaced_tags['{TagName}']), WindowsId=id\r\n    | where tagName has '{TagName}' and tagValue has '{TagValue}'\r\n    )\r\n    on id\r\n| distinct id,name,zoneRedundant,resourceGroup,subscriptionId,location,tostring(tags)",
                          "size": 0,
                          "title": "Azure Net App Files",
                          "noDataMessage": "All Azure Net App Files volumes have availability zones configured",
                          "noDataMessageStyle": 3,
                          "queryType": 1,
                          "resourceType": "microsoft.resourcegraph/resources",
                          "crossComponentResources": [
                            "{Subscription}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "zoneRedundant",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "1",
                                      "representation": "success",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "failed",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              }
                            ],
                            "rowLimit": 1000
                          }
                        },
                        "name": "query-net-app-zone-details"
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "selectedDetailsTab",
                    "comparison": "isEqualTo",
                    "value": "storage"
                  },
                  "name": "group - storageAccounts"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "title": "Compute Services Availability Zone Coverage",
                    "items": [
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "resources\r\n| where resourceGroup in ({ResourceGroup})\r\n| where type == 'microsoft.compute/disks'\r\n| where location in~ ({ZonalRegions:value})\r\n| extend resiliencyLevel = case(\r\n    sku.name in ('Premium_ZRS', 'Standard_ZRS'), \"Zone-Redundant\",    \r\n    isnotempty(zones) and array_length(zones) > 0, \"Zonal\",    \r\n    \"Regional\"\r\n  )\r\n| join kind = innerunique( //tag filter\r\n    resources\r\n    | extend replaced_tags = replace('{}', 'null', tostring(tags))\r\n    | extend replaced_tags = parse_json(replaced_tags)\r\n    | mv-expand replaced_tags\r\n    | extend tagName = tostring(bag_keys(replaced_tags)[0])\r\n    | extend tagValue = tostring(replaced_tags['{TagName}']), WindowsId=id\r\n    | where tagName has '{TagName}' and tagValue has '{TagValue}'\r\n    )\r\n    on id\r\n| project id,name,tostring(sku.name),resiliencyLevel,tostring(zones), resourceGroup,subscriptionId,location,tags",
                          "size": 0,
                          "title": "Azure Disk Storage",
                          "noDataMessage": "All disks have availability zones configured",
                          "noDataMessageStyle": 3,
                          "queryType": 1,
                          "resourceType": "microsoft.resourcegraph/resources",
                          "crossComponentResources": [
                            "{Subscription}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "resiliencyLevel",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Zone-Redudant",
                                      "representation": "success",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Zonal",
                                      "representation": "2",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Regional",
                                      "representation": "4",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "success",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "resourceGroup",
                                "formatter": 14,
                                "formatOptions": {
                                  "linkTarget": null,
                                  "showIcon": true
                                }
                              },
                              {
                                "columnMatch": "subscriptionId",
                                "formatter": 15,
                                "formatOptions": {
                                  "linkTarget": null,
                                  "showIcon": true
                                }
                              },
                              {
                                "columnMatch": "zoneRedundant",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "1",
                                      "representation": "success",
                                      "text": ""
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "failed",
                                      "text": ""
                                    }
                                  ]
                                }
                              }
                            ],
                            "rowLimit": 1000,
                            "filter": true,
                            "sortBy": [
                              {
                                "itemKey": "sku_name",
                                "sortOrder": 1
                              }
                            ]
                          },
                          "sortBy": [
                            {
                              "itemKey": "sku_name",
                              "sortOrder": 1
                            }
                          ]
                        },
                        "name": "query-disks-zones-details"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "resources\r\n| where resourceGroup in ({ResourceGroup})\r\n| where type =~ 'microsoft.compute/virtualmachines'\r\n| where location in~ ({ZonalRegions:value})\r\n| extend resourceGroup = strcat('/subscriptions/',subscriptionId,'/resourceGroups/',resourceGroup)\r\n| extend subscriptionId = strcat('/subscriptions/',subscriptionId)\r\n| extend pinnedZone = case(\r\n    isnull(zones), false, \r\n    true \r\n  )\r\n| extend size = properties.hardwareProfile.vmSize\r\n| join kind = innerunique( //Tag filter\r\n    resources\r\n    | extend replaced_tags = replace('{}', 'null', tostring(tags))\r\n    | extend replaced_tags = parse_json(replaced_tags)\r\n    | mv-expand replaced_tags\r\n    | extend tagName = tostring(bag_keys(replaced_tags)[0])\r\n    | extend tagValue = tostring(replaced_tags['{TagName}']), WindowsId=id\r\n    | where tagName has '{TagName}' and tagValue has '{TagValue}'\r\n    )\r\n    on id\r\n| project id,name,tostring(size),pinnedZone,tostring(zones),resourceGroup,subscriptionId,location,tags",
                          "size": 0,
                          "title": "Azure Virtual Machines",
                          "noDataMessage": "All Virtual Machines have availability zones configured",
                          "noDataMessageStyle": 3,
                          "queryType": 1,
                          "resourceType": "microsoft.resourcegraph/resources",
                          "crossComponentResources": [
                            "{Subscription}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "pinnedZone",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "1",
                                      "representation": "success",
                                      "text": ""
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "4",
                                      "text": ""
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "zoneRedundant",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "1",
                                      "representation": "success",
                                      "text": ""
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "4",
                                      "text": ""
                                    }
                                  ]
                                }
                              }
                            ],
                            "rowLimit": 1000
                          },
                          "sortBy": []
                        },
                        "name": "query-vms-zones-details"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "resources\r\n| where resourceGroup in ({ResourceGroup})\r\n| where type =~ 'microsoft.compute/virtualmachinescalesets'\r\n| where location in~ ({ZonalRegions:value})\r\n| extend resourceGroup = strcat('/subscriptions/',subscriptionId,'/resourceGroups/',resourceGroup)\r\n| extend subscriptionId = strcat('/subscriptions/',subscriptionId)\r\n| extend zoneRedundant = case(\r\n    isnull(zones) or array_length(zones) <= 1, false, \r\n    true \r\n  )\r\n| extend sku = sku.name\r\n| join kind = innerunique( //Tag filter\r\n    resources\r\n    | extend replaced_tags = replace('{}', 'null', tostring(tags))\r\n    | extend replaced_tags = parse_json(replaced_tags)\r\n    | mv-expand replaced_tags\r\n    | extend tagName = tostring(bag_keys(replaced_tags)[0])\r\n    | extend tagValue = tostring(replaced_tags['{TagName}']), WindowsId=id\r\n    | where tagName has '{TagName}' and tagValue has '{TagValue}'\r\n    )\r\n    on id\r\n| project id,name,tostring(sku),zoneRedundant,tostring(zones),resourceGroup,subscriptionId,location,tags",
                          "size": 0,
                          "title": "Azure Virtual Machines Scale Sets",
                          "noDataMessage": "All Virtual Machines Scale Sets have availability zones configured",
                          "noDataMessageStyle": 3,
                          "queryType": 1,
                          "resourceType": "microsoft.resourcegraph/resources",
                          "crossComponentResources": [
                            "{Subscription}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "pinnedZone",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "1",
                                      "representation": "success",
                                      "text": ""
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "4",
                                      "text": ""
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "zoneRedundant",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "1",
                                      "representation": "success",
                                      "text": ""
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "4",
                                      "text": ""
                                    }
                                  ]
                                }
                              }
                            ],
                            "rowLimit": 1000
                          },
                          "sortBy": []
                        },
                        "name": "query-vmss-zones-details"
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "selectedDetailsTab",
                    "comparison": "isEqualTo",
                    "value": "compute"
                  },
                  "name": "group - Details-Compute"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "title": "Integration Services Availability Zone Coverage",
                    "items": [
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "resources\r\n| where resourceGroup in ({ResourceGroup})\r\n| where type =~ 'microsoft.apimanagement/service'\r\n| where location in~ ({ZonalRegions:value})\r\n| extend resourceGroup = strcat('/subscriptions/',subscriptionId,'/resourceGroups/',resourceGroup)\r\n| extend subscriptionId = strcat('/subscriptions/',subscriptionId)\r\n| extend zoneRedundant = case(\r\n    isnull(zones) or array_length(zones) <= 1, false, \r\n    true \r\n  )\r\n| extend sku = sku.name\r\n| join kind = innerunique( //Tag filter\r\n    resources\r\n    | extend replaced_tags = replace('{}', 'null', tostring(tags))\r\n    | extend replaced_tags = parse_json(replaced_tags)\r\n    | mv-expand replaced_tags\r\n    | extend tagName = tostring(bag_keys(replaced_tags)[0])\r\n    | extend tagValue = tostring(replaced_tags['{TagName}']), WindowsId=id\r\n    | where tagName has '{TagName}' and tagValue has '{TagValue}'\r\n    )\r\n    on id\r\n| project id,name,tostring(sku),zoneRedundant,tostring(zones),resourceGroup,subscriptionId,location,tags",
                          "size": 0,
                          "title": "Azure API Management",
                          "noDataMessage": "All Azure API Management services have availability zones configured",
                          "noDataMessageStyle": 3,
                          "queryType": 1,
                          "resourceType": "microsoft.resourcegraph/resources",
                          "crossComponentResources": [
                            "{Subscription}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "pinnedZone",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "1",
                                      "representation": "success",
                                      "text": ""
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "4",
                                      "text": ""
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "zoneRedundant",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "1",
                                      "representation": "success",
                                      "text": ""
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "4",
                                      "text": ""
                                    }
                                  ]
                                }
                              }
                            ],
                            "rowLimit": 1000
                          },
                          "sortBy": []
                        },
                        "name": "query-apiManagement-zones-details"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "resources\r\n| where resourceGroup in ({ResourceGroup})\r\n| where type =~ 'microsoft.servicebus/namespaces'\r\n| where location in~ ({ZonalRegions:value})\r\n| extend resourceGroup = strcat('/subscriptions/',subscriptionId,'/resourceGroups/',resourceGroup)\r\n| extend subscriptionId = strcat('/subscriptions/',subscriptionId)\r\n| extend zones = tostring(properties.zoneRedundant)\r\n| extend zoneRedundant = case(zones == false, false, \r\n    true \r\n  )\r\n| extend sku = sku.name\r\n| join kind = innerunique( //Tag filter\r\n    resources\r\n    | extend replaced_tags = replace('{}', 'null', tostring(tags))\r\n    | extend replaced_tags = parse_json(replaced_tags)\r\n    | mv-expand replaced_tags\r\n    | extend tagName = tostring(bag_keys(replaced_tags)[0])\r\n    | extend tagValue = tostring(replaced_tags['{TagName}']), WindowsId=id\r\n    | where tagName has '{TagName}' and tagValue has '{TagValue}'\r\n    )\r\n    on id\r\n| project id,name,tostring(sku),zoneRedundant,tostring(zones),resourceGroup,subscriptionId,location,tags",
                          "size": 0,
                          "title": "Azure Service Bus",
                          "noDataMessage": "All Azure Service Bus namespaces have availability zones configured",
                          "noDataMessageStyle": 3,
                          "queryType": 1,
                          "resourceType": "microsoft.resourcegraph/resources",
                          "crossComponentResources": [
                            "{Subscription}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "pinnedZone",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "1",
                                      "representation": "success",
                                      "text": ""
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "4",
                                      "text": ""
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "zoneRedundant",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "1",
                                      "representation": "success",
                                      "text": ""
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "4",
                                      "text": ""
                                    }
                                  ]
                                }
                              }
                            ],
                            "rowLimit": 1000
                          },
                          "sortBy": []
                        },
                        "name": "query-servicebus-zones-details"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "resources\r\n| where resourceGroup in ({ResourceGroup})\r\n| where type == \"microsoft.eventhub/namespaces\"\r\n| where location in~ ({ZonalRegions:value})\r\n| extend resourceGroup = strcat('/subscriptions/',subscriptionId,'/resourceGroups/',resourceGroup)\r\n| extend subscriptionId = strcat('/subscriptions/',subscriptionId)\r\n| extend locations=properties.locations\r\n| extend zoneRedundant = tostring(properties.zoneRedundant)\r\n| join kind = innerunique( //Tag filter\r\n    resources\r\n    | extend replaced_tags = replace('{}', 'null', tostring(tags))\r\n    | extend replaced_tags = parse_json(replaced_tags)\r\n    | mv-expand replaced_tags\r\n    | extend tagName = tostring(bag_keys(replaced_tags)[0])\r\n    | extend tagValue = tostring(replaced_tags['{TagName}']), WindowsId=id\r\n    | where tagName has '{TagName}' and tagValue has '{TagValue}'\r\n    )\r\n    on id\r\n| distinct id,name,zoneRedundant,resourceGroup,subscriptionId,location,tostring(tags)",
                          "size": 0,
                          "title": "Azure Event Hubs",
                          "noDataMessage": "All Azure Event Hub have availability zones configured",
                          "noDataMessageStyle": 3,
                          "queryType": 1,
                          "resourceType": "microsoft.resourcegraph/resources",
                          "crossComponentResources": [
                            "{Subscription}"
                          ]
                        },
                        "name": "query-eventHub-zones-details"
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "selectedDetailsTab",
                    "comparison": "isEqualTo",
                    "value": "integrationServices"
                  },
                  "name": "group - Details-APIManagement"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "title": "App Services Availability Zone Coverage",
                    "items": [
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "resources\r\n| where resourceGroup in ({ResourceGroup})\r\n| where type =~ 'microsoft.web/serverfarms'\r\n| where location in~ ({ZonalRegions:value})\r\n| extend resourceGroup = strcat('/subscriptions/',subscriptionId,'/resourceGroups/',resourceGroup)\r\n| extend subscriptionId = strcat('/subscriptions/',subscriptionId)\r\n| extend locations=properties.locations\r\n| extend zoneRedundant = tostring(properties.zoneRedundant)\r\n| join kind = innerunique( //Tag filter\r\n    resources\r\n    | extend replaced_tags = replace('{}', 'null', tostring(tags))\r\n    | extend replaced_tags = parse_json(replaced_tags)\r\n    | mv-expand replaced_tags\r\n    | extend tagName = tostring(bag_keys(replaced_tags)[0])\r\n    | extend tagValue = tostring(replaced_tags['{TagName}']), WindowsId=id\r\n    | where tagName has '{TagName}' and tagValue has '{TagValue}'\r\n    )\r\n    on id\r\n| distinct id,name,zoneRedundant,resourceGroup,subscriptionId,location,tostring(tags)",
                          "size": 0,
                          "queryType": 1,
                          "resourceType": "microsoft.resourcegraph/resources",
                          "crossComponentResources": [
                            "{Subscription}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "zoneRedundant",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "true",
                                      "representation": "success",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "failed",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        },
                        "name": "query - 0"
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "selectedDetailsTab",
                    "comparison": "isEqualTo",
                    "value": "app"
                  },
                  "name": "group - Details-App"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "title": "Azure Container Services Availability Zone Coverage",
                    "items": [
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "resources\r\n| where resourceGroup in ({ResourceGroup})\r\n| where type =~ 'microsoft.containerservice/managedclusters'\r\n| where location in~ ({ZonalRegions:value})\r\n| extend resourceGroup = strcat('/subscriptions/',subscriptionId,'/resourceGroups/',resourceGroup)\r\n| extend subscriptionId = strcat('/subscriptions/',subscriptionId)\r\n| extend sku = sku.name\r\n| extend pools = properties.agentPoolProfiles\r\n| mv-expand pool = pools\r\n| extend NodePoolName = pool.name\r\n| extend NodePoolMode = pool.mode\r\n| extend zones = pool.availabilityZones\r\n| extend zoneRedundant = case(\r\n    isnull(zones) or array_length(zones) <= 1, false, \r\n    true \r\n  )\r\n| extend zones = pool.availabilityZones\r\n| join kind = innerunique( //Tag filter\r\n    resources\r\n    | extend replaced_tags = replace('{}', 'null', tostring(tags))\r\n    | extend replaced_tags = parse_json(replaced_tags)\r\n    | mv-expand replaced_tags\r\n    | extend tagName = tostring(bag_keys(replaced_tags)[0])\r\n    | extend tagValue = tostring(replaced_tags['{TagName}']), WindowsId=id\r\n    | where tagName has '{TagName}' and tagValue has '{TagValue}'\r\n    )\r\n    on id\r\n| distinct id,name,tostring(sku),zoneRedundant,tostring(zones),resourceGroup,subscriptionId,location,tostring(tags)",
                          "size": 0,
                          "title": "Azure Container Service (AKS)",
                          "noDataMessage": "All Azure Container Services (AKS) have availability zones configured",
                          "noDataMessageStyle": 3,
                          "queryType": 1,
                          "resourceType": "microsoft.resourcegraph/resources",
                          "crossComponentResources": [
                            "{Subscription}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "zoneRedundant",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "0",
                                      "representation": "4",
                                      "text": ""
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "success",
                                      "text": ""
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        },
                        "name": "query-containerService-zones-details"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "resources\r\n| where resourceGroup in ({ResourceGroup})\r\n| where type =~ \"microsoft.containerregistry/registries\"\r\n| where location in~ ({ZonalRegions:value})\r\n| extend resourceGroup = strcat('/subscriptions/',subscriptionId,'/resourceGroups/',resourceGroup)\r\n| extend subscriptionId = strcat('/subscriptions/',subscriptionId)\r\n| extend locations=properties.locations\r\n| extend zoneRedundant = tostring(properties.zoneRedundancy)\r\n| join kind = innerunique( //Tag filter\r\n    resources\r\n    | extend replaced_tags = replace('{}', 'null', tostring(tags))\r\n    | extend replaced_tags = parse_json(replaced_tags)\r\n    | mv-expand replaced_tags\r\n    | extend tagName = tostring(bag_keys(replaced_tags)[0])\r\n    | extend tagValue = tostring(replaced_tags['{TagName}']), WindowsId=id\r\n    | where tagName has '{TagName}' and tagValue has '{TagValue}'\r\n    )\r\n    on id\r\n| distinct id,name,zoneRedundant,resourceGroup,subscriptionId,location,tostring(tags)",
                          "size": 0,
                          "title": "Azure Container Registry",
                          "noDataMessage": "All Azure Container Registries have availability zones configured",
                          "queryType": 1,
                          "resourceType": "microsoft.resourcegraph/resources",
                          "crossComponentResources": [
                            "{Subscription}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "zoneRedundant",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Enabled",
                                      "representation": "success",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "failed",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        },
                        "name": "query-containerRegistry-zones-details"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "resources\r\n| where resourceGroup in ({ResourceGroup})\r\n| where type =~ 'microsoft.app/managedenvironments'\r\n| where location in~ ({ZonalRegions:value})\r\n| extend resourceGroup = strcat('/subscriptions/',subscriptionId,'/resourceGroups/',resourceGroup)\r\n| extend subscriptionId = strcat('/subscriptions/',subscriptionId)\r\n| extend zoneRedundant = case(\r\n    properties.zoneRedundant == \"false\", false, \r\n    true \r\n  )\r\n| join kind = innerunique( //Tag filter\r\n    resources\r\n    | extend replaced_tags = replace('{}', 'null', tostring(tags))\r\n    | extend replaced_tags = parse_json(replaced_tags)\r\n    | mv-expand replaced_tags\r\n    | extend tagName = tostring(bag_keys(replaced_tags)[0])\r\n    | extend tagValue = tostring(replaced_tags['{TagName}']), WindowsId=id\r\n    | where tagName has '{TagName}' and tagValue has '{TagValue}'\r\n    )\r\n    on id\r\n| project id,name,zoneRedundant,tostring(zones),resourceGroup,subscriptionId,location,tags",
                          "size": 0,
                          "title": "Azure Container Apps environments",
                          "noDataMessage": "All Azure Container Apps environments have availability zones configured",
                          "noDataMessageStyle": 3,
                          "queryType": 1,
                          "resourceType": "microsoft.resourcegraph/resources",
                          "crossComponentResources": [
                            "{Subscription}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "pinnedZone",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "1",
                                      "representation": "success",
                                      "text": ""
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "4",
                                      "text": ""
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "zoneRedundant",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "1",
                                      "representation": "success",
                                      "text": ""
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "4",
                                      "text": ""
                                    }
                                  ]
                                }
                              }
                            ],
                            "rowLimit": 1000
                          },
                          "sortBy": []
                        },
                        "name": "query-app-zones-details"
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "selectedDetailsTab",
                    "comparison": "isEqualTo",
                    "value": "containerServices"
                  },
                  "name": "group - Details-ContainerService"
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "SelectedSubTab",
              "comparison": "isEqualTo",
              "value": "Details"
            },
            "name": "details-group"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "SelectedTab",
        "comparison": "isEqualTo",
        "value": "zoneAdoption"
      },
      "name": "groupZoneAdoption"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "title": "BCDR",
        "items": [
          {
            "type": 11,
            "content": {
              "version": "LinkItem/1.0",
              "style": "tabs",
              "links": [
                {
                  "id": "ca40468d-4518-43bf-ac6e-0a11d7331e12",
                  "cellValue": "SelectedSubTab",
                  "linkTarget": "parameter",
                  "linkLabel": "Overview",
                  "subTarget": "Overview",
                  "style": "link"
                },
                {
                  "id": "f280fc2a-f42a-42a4-ad4b-be37ab3e8b48",
                  "cellValue": "SelectedSubTab",
                  "linkTarget": "parameter",
                  "linkLabel": "Details",
                  "subTarget": "Details",
                  "style": "link"
                }
              ]
            },
            "name": "links - bcdrSubTab"
          },
          {
            "type": 1,
            "content": {
              "json": "# Business Continuity and Disaster Recovery (BCDR)\r\n## BCDR Best Practice Checks\r\nThis section reviews your Azure resources for alignment with BCDR best practices. Recommendations focus on ensuring that your workloads are resilient to outages, have appropriate backup and recovery strategies, and are configured for high availability. Addressing these findings helps minimize downtime and data loss in the event of failures or disasters.",
              "style": "upsell"
            },
            "conditionalVisibility": {
              "parameterName": "SelectedSubTab",
              "comparison": "isEqualTo",
              "value": "Overview"
            },
            "name": "text - BCDR"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "// VM Backup Recommendation\r\nresources\r\n| where type =~ 'microsoft.compute/virtualmachines'\r\n    and resourceGroup in ({ResourceGroup})\r\n| project vmId = tolower(id), vmName = name, subscriptionId, resourceGroup, location, type\r\n| join kind=leftouter (\r\n    recoveryservicesresources\r\n    | where type =~ 'microsoft.recoveryservices/vaults/backupfabrics/protectioncontainers/protecteditems'\r\n    | where properties.protectedItemType =~ 'Microsoft.Compute/virtualMachines'\r\n    | extend sourceResourceId = tolower(tostring(properties.sourceResourceId))\r\n    | where isnotempty(sourceResourceId)\r\n    | distinct sourceResourceId\r\n) on $left.vmId == $right.sourceResourceId\r\n| extend hasBackup = iff(isempty(sourceResourceId), false, true)\r\n| extend\r\n    Recommendation = iff(hasBackup, \"VM has backup configured\", \"Enable VM Backup\"),\r\n    RecommendationId = iff(hasBackup, \"backup-vm-001-protected\", \"backup-vm-001-unprotected\"),\r\n    ImplementationImpact = \"High\",\r\n    ImplementationComplexity = \"Low\",\r\n    type = \"microsoft.compute/virtualmachines\"\r\n| where hasBackup == false\r\n| join kind=leftouter (\r\n    resources\r\n    | where type =~ 'microsoft.compute/virtualmachines'\r\n       and resourceGroup in ({ResourceGroup})\r\n    | summarize Total = count()\r\n    | extend type = \"microsoft.compute/virtualmachines\"\r\n) on type\r\n| summarize ImpactedCount = count() by RecommendationId, type, Recommendation, ImplementationImpact, ImplementationComplexity, Total\r\n| extend ImpactedResources = strcat(ImpactedCount, '/', Total)\r\n| project Recommendation, type, ImpactedResources, ImplementationImpact, ImplementationComplexity\r\n\r\n// Recovery Services Vault Recommendations\r\n| union (\r\n    resources\r\n    | where type =~ 'microsoft.recoveryservices/vaults'\r\n    | extend bcdrSecurityLevel = tostring(properties.bcdrSecurityLevel)\r\n    | where bcdrSecurityLevel =~ \"Poor\"\r\n    | summarize ImpactedCount = count(), Total = count() by type, bcdrSecurityLevel\r\n    | extend\r\n        Recommendation = \"BCDR Security Level is poor\",\r\n        RecommendationId = \"5388f93e-bde1-49e7-a166-6c24e90b2daf\",\r\n        ImplementationImpact = \"High\",\r\n        ImplementationComplexity = \"Medium\",\r\n        ImpactedResources = strcat(ImpactedCount, '/', Total)\r\n    | project Recommendation, type, ImpactedResources, ImplementationImpact, ImplementationComplexity\r\n)\r\n| union (\r\n    resources\r\n    | where type =~ 'microsoft.recoveryservices/vaults'\r\n    | extend standardTierStorageRedundancy = tostring(properties.redundancySettings.standardTierStorageRedundancy)\r\n    | where standardTierStorageRedundancy =~ \"ZoneRedundant\"\r\n    | summarize ImpactedCount = count(), Total = count() by type, standardTierStorageRedundancy\r\n    | extend\r\n        Recommendation = \"Standard Tier Storage Redundancy is ZoneRedundant\",\r\n        RecommendationId = \"d20ca2a6-1aea-40ea-93cb-bc31fa5a1eda\",\r\n        ImplementationImpact = \"High\",\r\n        ImplementationComplexity = \"Low\",\r\n        ImpactedResources = strcat(ImpactedCount, '/', Total)\r\n    | project Recommendation, type, ImpactedResources, ImplementationImpact, ImplementationComplexity\r\n)\r\n| union (\r\n    resources\r\n    | where type =~ 'microsoft.recoveryservices/vaults'\r\n    | extend crossRegionRestore = tostring(properties.redundancySettings.crossRegionRestore)\r\n    | where crossRegionRestore =~ \"Disabled\"\r\n    | summarize ImpactedCount = count(), Total = count() by type, crossRegionRestore\r\n    | extend\r\n        Recommendation = \"Cross Region Restore is disabled\",\r\n        RecommendationId = \"44296813-ef2e-4a0b-8c87-01c9e84858d4\",\r\n        ImplementationImpact = \"High\",\r\n        ImplementationComplexity = \"Low\",\r\n        ImpactedResources = strcat(ImpactedCount, '/', Total)\r\n    | project Recommendation, type, ImpactedResources, ImplementationImpact, ImplementationComplexity\r\n)\r\n| union (\r\n    resources\r\n    | where type =~ 'microsoft.recoveryservices/vaults'\r\n    | extend softDeleteState = tostring(properties.securitySettings.softDeleteSettings.softDeleteState)\r\n    | where softDeleteState =~ \"Disabled\"\r\n    | summarize ImpactedCount = count(), Total = count() by type, softDeleteState\r\n    | extend\r\n        Recommendation = \"Soft Delete is disabled\",\r\n        RecommendationId = \"578a900c-b349-4dfa-9049-3af5d2961764\",\r\n        ImplementationImpact = \"High\",\r\n        ImplementationComplexity = \"Low\",\r\n        ImpactedResources = strcat(ImpactedCount, '/', Total)\r\n    | project Recommendation, type, ImpactedResources, ImplementationImpact, ImplementationComplexity\r\n)",
                    "size": 0,
                    "title": "Recommendation by Impact",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscription}"
                    ],
                    "visualization": "tiles",
                    "sortBy": [],
                    "tileSettings": {
                      "titleContent": {
                        "columnMatch": "Recommendation"
                      },
                      "subtitleContent": {
                        "columnMatch": "type"
                      },
                      "leftContent": {
                        "columnMatch": "ImpactedResources",
                        "formatter": 12,
                        "formatOptions": {
                          "palette": "auto"
                        },
                        "tooltipFormat": {
                          "tooltip": "Number of impacted resources / Total resources"
                        }
                      },
                      "secondaryContent": {
                        "columnMatch": "RecommendationId"
                      },
                      "showBorder": true,
                      "size": "auto",
                      "styleSettings": {
                        "borderStyle": "rounded"
                      }
                    }
                  },
                  "name": "visualImplementationImpact-BCDR"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "// VM Backup Recommendation\r\nresources\r\n| where type =~ 'microsoft.compute/virtualmachines'\r\n    and resourceGroup in ({ResourceGroup})\r\n| project vmId = tolower(id), vmName = name, subscriptionId, resourceGroup, location, type\r\n| join kind=leftouter (\r\n    recoveryservicesresources\r\n    | where type =~ 'microsoft.recoveryservices/vaults/backupfabrics/protectioncontainers/protecteditems'\r\n    | where properties.protectedItemType =~ 'Microsoft.Compute/virtualMachines'\r\n    | extend sourceResourceId = tolower(tostring(properties.sourceResourceId))\r\n    | where isnotempty(sourceResourceId)\r\n    | distinct sourceResourceId\r\n) on $left.vmId == $right.sourceResourceId\r\n| extend hasBackup = iff(isempty(sourceResourceId), false, true)\r\n| extend\r\n    Recommendation = iff(hasBackup, \"VM has backup configured\", \"Enable VM Backup\"),\r\n    RecommendationId = iff(hasBackup, \"backup-vm-001-protected\", \"backup-vm-001-unprotected\"),\r\n    ImplementationImpact = \"High\",\r\n    ImplementationComplexity = \"Low\",\r\n    type = \"microsoft.compute/virtualmachines\"\r\n| where hasBackup == false\r\n| join kind=leftouter (\r\n    resources\r\n    | where type =~ 'microsoft.compute/virtualmachines'\r\n       and resourceGroup in ({ResourceGroup})\r\n    | summarize Total = count()\r\n    | extend type = \"microsoft.compute/virtualmachines\"\r\n) on type\r\n| summarize ImpactedCount = count() by RecommendationId, type, Recommendation, ImplementationImpact, ImplementationComplexity, Total\r\n| extend ImpactedResources = strcat(ImpactedCount, '/', Total)\r\n| project Recommendation, type, ImpactedResources, ImplementationImpact, ImplementationComplexity\r\n\r\n// Recovery Services Vault Recommendations\r\n| union (\r\n    resources\r\n    | where type =~ 'microsoft.recoveryservices/vaults'\r\n    | extend bcdrSecurityLevel = tostring(properties.bcdrSecurityLevel)\r\n    | where bcdrSecurityLevel =~ \"Poor\"\r\n    | summarize ImpactedCount = count(), Total = count() by type, bcdrSecurityLevel\r\n    | extend\r\n        Recommendation = \"BCDR Security Level is poor\",\r\n        RecommendationId = \"5388f93e-bde1-49e7-a166-6c24e90b2daf\",\r\n        ImplementationImpact = \"High\",\r\n        ImplementationComplexity = \"Medium\",\r\n        ImpactedResources = strcat(ImpactedCount, '/', Total)\r\n    | project Recommendation, type, ImpactedResources, ImplementationImpact, ImplementationComplexity\r\n)\r\n| union (\r\n    resources\r\n    | where type =~ 'microsoft.recoveryservices/vaults'\r\n    | extend standardTierStorageRedundancy = tostring(properties.redundancySettings.standardTierStorageRedundancy)\r\n    | where standardTierStorageRedundancy =~ \"ZoneRedundant\"\r\n    | summarize ImpactedCount = count(), Total = count() by type, standardTierStorageRedundancy\r\n    | extend\r\n        Recommendation = \"Standard Tier Storage Redundancy is ZoneRedundant\",\r\n        RecommendationId = \"d20ca2a6-1aea-40ea-93cb-bc31fa5a1eda\",\r\n        ImplementationImpact = \"High\",\r\n        ImplementationComplexity = \"Low\",\r\n        ImpactedResources = strcat(ImpactedCount, '/', Total)\r\n    | project Recommendation, type, ImpactedResources, ImplementationImpact, ImplementationComplexity\r\n)\r\n| union (\r\n    resources\r\n    | where type =~ 'microsoft.recoveryservices/vaults'\r\n    | extend crossRegionRestore = tostring(properties.redundancySettings.crossRegionRestore)\r\n    | where crossRegionRestore =~ \"Disabled\"\r\n    | summarize ImpactedCount = count(), Total = count() by type, crossRegionRestore\r\n    | extend\r\n        Recommendation = \"Cross Region Restore is disabled\",\r\n        RecommendationId = \"44296813-ef2e-4a0b-8c87-01c9e84858d4\",\r\n        ImplementationImpact = \"High\",\r\n        ImplementationComplexity = \"Low\",\r\n        ImpactedResources = strcat(ImpactedCount, '/', Total)\r\n    | project Recommendation, type, ImpactedResources, ImplementationImpact, ImplementationComplexity\r\n)\r\n| union (\r\n    resources\r\n    | where type =~ 'microsoft.recoveryservices/vaults'\r\n    | extend softDeleteState = tostring(properties.securitySettings.softDeleteSettings.softDeleteState)\r\n    | where softDeleteState =~ \"Disabled\"\r\n    | summarize ImpactedCount = count(), Total = count() by type, softDeleteState\r\n    | extend\r\n        Recommendation = \"Soft Delete is disabled\",\r\n        RecommendationId = \"578a900c-b349-4dfa-9049-3af5d2961764\",\r\n        ImplementationImpact = \"High\",\r\n        ImplementationComplexity = \"Low\",\r\n        ImpactedResources = strcat(ImpactedCount, '/', Total)\r\n    | project Recommendation, type, ImpactedResources, ImplementationImpact, ImplementationComplexity\r\n)",
                    "size": 0,
                    "showAnalytics": true,
                    "title": "Backup recommendations",
                    "showRefreshButton": true,
                    "showExportToExcel": true,
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscription}"
                    ],
                    "gridSettings": {
                      "sortBy": [
                        {
                          "itemKey": "ImplementationComplexity",
                          "sortOrder": 1
                        }
                      ]
                    },
                    "sortBy": [
                      {
                        "itemKey": "ImplementationComplexity",
                        "sortOrder": 1
                      }
                    ]
                  },
                  "name": "Executive insights-BCDR"
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "SelectedSubTab",
              "comparison": "isEqualTo",
              "value": "Overview"
            },
            "name": "groupOverviewBackup"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "resources\r\n| where type =~ 'microsoft.compute/virtualmachines'\r\n    and resourceGroup in ({ResourceGroup})\r\n| project \r\n    VMName = name,\r\n    ResourceGroup = resourceGroup,\r\n    Location = location,\r\n    VMId = id,\r\n    subscriptionId\r\n| join kind=leftouter (\r\n    recoveryservicesresources\r\n    | where type =~ 'microsoft.recoveryservices/vaults/backupfabrics/protectioncontainers/protecteditems'\r\n    | where properties.protectedItemType =~ 'Microsoft.Compute/virtualMachines'\r\n    | extend sourceResourceId = tolower(tostring(properties.sourceResourceId))\r\n    | where isnotempty(sourceResourceId)\r\n    | distinct sourceResourceId\r\n) on $left.VMId == $right.sourceResourceId\r\n| extend BackupStatus = iff(isempty(sourceResourceId), \"Not Protected\", \"Protected\")\r\n| where BackupStatus == \"Not Protected\"\r\n| extend \r\n    Recommendation = \"Enable VM Backup\",\r\n    ImplementationImpact = \"High\",\r\n    ImplementationComplexity = \"Low\"\r\n| project   Recommendation, VMName,  ResourceGroup,  ImplementationImpact, ImplementationComplexity, Location, subscriptionId \r\n| sort by VMName asc",
                    "size": 0,
                    "title": "VMs without backup",
                    "showExportToExcel": true,
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscription}"
                    ],
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "VMName",
                          "formatter": 13,
                          "formatOptions": {
                            "linkTarget": null,
                            "showIcon": true
                          }
                        },
                        {
                          "columnMatch": "ResourceGroup",
                          "formatter": 14,
                          "formatOptions": {
                            "linkTarget": null,
                            "showIcon": true
                          }
                        },
                        {
                          "columnMatch": "subscriptionId",
                          "formatter": 15,
                          "formatOptions": {
                            "linkTarget": null,
                            "showIcon": true
                          }
                        }
                      ]
                    }
                  },
                  "name": "queryCheckVMBackup"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "resources\r\n| where type =~ 'microsoft.recoveryservices/vaults'\r\n| extend standardTierStorageRedundancy = tostring(properties.redundancySettings.standardTierStorageRedundancy)\r\n| extend hasIssue = iff(standardTierStorageRedundancy =~ \"ZoneRedundant\", true, false)\r\n| extend\r\n    Recommendation = iff(hasIssue, \"Recovery Services Vault storage redundancy is Zone Redundant, consider moving to Geo Redundant.\", \"Storage Redundancy is not ZoneRedundant\"),\r\n    RecommendationId = iff(hasIssue, \"d20ca2a6-1aea-40ea-93cb-bc31fa5a1eda\", \"\"),\r\n    ImplementationImpact = \"Medium\",\r\n    ImplementationComplexity = \"Low\",\r\n    type = \"microsoft.recoveryservices/vaults\"\r\n| where hasIssue\r\n| project   Recommendation, name,  resourceGroup,  ImplementationImpact, ImplementationComplexity, location, subscriptionId ",
                    "size": 0,
                    "title": "Recovery Services Vault security level",
                    "showExportToExcel": true,
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscription}"
                    ],
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "resourceGroup",
                          "formatter": 14,
                          "formatOptions": {
                            "linkTarget": null,
                            "showIcon": true
                          }
                        },
                        {
                          "columnMatch": "subscriptionId",
                          "formatter": 15,
                          "formatOptions": {
                            "linkTarget": null,
                            "showIcon": true
                          }
                        }
                      ]
                    }
                  },
                  "name": "queryCheckVaultSecurity"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "resources\r\n| where type =~ 'microsoft.recoveryservices/vaults'\r\n| extend standardTierStorageRedundancy = tostring(properties.redundancySettings.standardTierStorageRedundancy)\r\n| extend hasIssue = iff(standardTierStorageRedundancy =~ \"ZoneRedundant\", true, false)\r\n| extend\r\n    Recommendation = iff(hasIssue, \"Recovery Services Vault storage redundancy is Zone Redundant, consider moving to Geo Redundant.\", \"Storage Redundancy is not ZoneRedundant\"),\r\n    RecommendationId = iff(hasIssue, \"d20ca2a6-1aea-40ea-93cb-bc31fa5a1eda\", \"\"),\r\n    ImplementationImpact = \"Medium\",\r\n    ImplementationComplexity = \"Low\",\r\n    type = \"microsoft.recoveryservices/vaults\"\r\n| where hasIssue\r\n| project   Recommendation, name,  resourceGroup,  ImplementationImpact, ImplementationComplexity, location, subscriptionId ",
                    "size": 0,
                    "title": "Recovery Services Vault storage settings",
                    "showExportToExcel": true,
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscription}"
                    ],
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "resourceGroup",
                          "formatter": 14,
                          "formatOptions": {
                            "linkTarget": null,
                            "showIcon": true
                          }
                        },
                        {
                          "columnMatch": "subscriptionId",
                          "formatter": 15,
                          "formatOptions": {
                            "linkTarget": null,
                            "showIcon": true
                          }
                        }
                      ]
                    }
                  },
                  "name": "queryCheckVaultRedundancy"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "resources\r\n| where type =~ 'microsoft.recoveryservices/vaults'\r\n| extend softDeleteState = tostring(properties.securitySettings.softDeleteSettings.softDeleteState)\r\n| extend hasIssue = iff(softDeleteState =~ \"Disabled\", true, false)\r\n| extend\r\n    Recommendation = iff(hasIssue, \"Soft Delete is disabled\", \"Soft Delete is enabled\"),\r\n    RecommendationId = iff(hasIssue, \"578a900c-b349-4dfa-9049-3af5d2961764\", \"\"),\r\n    ImplementationImpact = \"High\",\r\n    ImplementationComplexity = \"Low\",\r\n    type = \"microsoft.recoveryservices/vaults\"\r\n| where hasIssue\r\n//| summarize ImpactedCount = count() by RecommendationId, type, Recommendation, ImplementationImpact, ImplementationComplexity\r\n| project   Recommendation, name,  resourceGroup,  ImplementationImpact, ImplementationComplexity, location, subscriptionId ",
                    "size": 0,
                    "title": "Recovery Services Vault delete protection status",
                    "noDataMessage": "All of your Recovery Services Vault have soft delete enabled.",
                    "noDataMessageStyle": 3,
                    "showExportToExcel": true,
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscription}"
                    ],
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "resourceGroup",
                          "formatter": 14,
                          "formatOptions": {
                            "linkTarget": null,
                            "showIcon": true
                          }
                        },
                        {
                          "columnMatch": "subscriptionId",
                          "formatter": 15,
                          "formatOptions": {
                            "linkTarget": null,
                            "showIcon": true
                          }
                        }
                      ]
                    }
                  },
                  "name": "queryCheckSoftDelete"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "resources\r\n| where type =~ 'microsoft.recoveryservices/vaults'\r\n| extend crossRegionRestore = tostring(properties.redundancySettings.crossRegionRestore)\r\n| extend hasIssue = iff(crossRegionRestore =~ \"Disabled\", true, false)\r\n| extend\r\n    Recommendation = iff(hasIssue, \"Cross Region Restore is disabled\", \"Cross Region Restore is enabled\"),\r\n    RecommendationId = iff(hasIssue, \"44296813-ef2e-4a0b-8c87-01c9e84858d4\", \"\"),\r\n    ImplementationImpact = \"High\",\r\n    ImplementationComplexity = \"Low\",\r\n    type = \"microsoft.recoveryservices/vaults\"\r\n| where hasIssue\r\n//| summarize ImpactedCount = count() by RecommendationId, type, Recommendation, ImplementationImpact, ImplementationComplexity\r\n| project   Recommendation, name,  resourceGroup,  ImplementationImpact, ImplementationComplexity, location, subscriptionId ",
                    "size": 0,
                    "title": "Recovery Services Vault cross region restore",
                    "noDataMessage": "All of your Recovery Services Vault cross region restore enabled.",
                    "noDataMessageStyle": 3,
                    "showExportToExcel": true,
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscription}"
                    ],
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "resourceGroup",
                          "formatter": 14,
                          "formatOptions": {
                            "linkTarget": null,
                            "showIcon": true
                          }
                        },
                        {
                          "columnMatch": "subscriptionId",
                          "formatter": 15,
                          "formatOptions": {
                            "linkTarget": null,
                            "showIcon": true
                          }
                        }
                      ]
                    }
                  },
                  "name": "queryCheckCrossRegion"
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "SelectedSubTab",
              "comparison": "isEqualTo",
              "value": "Details"
            },
            "name": "groupBCDR-Details"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "SelectedTab",
        "comparison": "isEqualTo",
        "value": "BCDR"
      },
      "name": "groupBCDR"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "title": "Security",
        "items": [
          {
            "type": 11,
            "content": {
              "version": "LinkItem/1.0",
              "style": "tabs",
              "links": [
                {
                  "id": "ca40468d-4518-43bf-ac6e-0a11d7331e12",
                  "cellValue": "SelectedSubTab",
                  "linkTarget": "parameter",
                  "linkLabel": "Overview",
                  "subTarget": "Overview",
                  "style": "link"
                },
                {
                  "id": "f280fc2a-f42a-42a4-ad4b-be37ab3e8b48",
                  "cellValue": "SelectedSubTab",
                  "linkTarget": "parameter",
                  "linkLabel": "Details",
                  "subTarget": "Details",
                  "style": "link"
                }
              ]
            },
            "name": "links - defenderSubTab"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 1,
                  "content": {
                    "json": "# Security\r\n## Security Best Practice Checks\r\nThis section evaluates your Azure resources against security best practices. Recommendations focus on protecting your environment from threats, ensuring proper access controls, and maintaining compliance with security standards. Addressing these findings helps safeguard your data, applications, and infrastructure from vulnerabilities and unauthorized access.",
                    "style": "upsell"
                  },
                  "name": "text - Security"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "securityresources\n| where type =~ \"microsoft.security/pricings\"\n| extend pricingTier = properties.pricingTier, subPlan = properties.subPlan\n| extend planSet = pack(name, level = case(isnotempty(subPlan),subPlan,pricingTier))\n| summarize defenderPlans = make_bag(planSet) by subscriptionId\n| project subscriptionId,\n    CloudPosture = defenderPlans.CloudPosture,\n    VirtualMachines = defenderPlans.VirtualMachines,\n    AppServices = defenderPlans.AppServices,\n    SqlServers = defenderPlans.SqlServers,\n    SqlServerVirtualMachines = defenderPlans.SqlServerVirtualMachines,\n    OpenSourceRelationalDatabases = defenderPlans.OpenSourceRelationalDatabases,\n    CosmosDB = defenderPlans.CosmosDbs,\n    StorageAccounts = defenderPlans.StorageAccounts,\n    Containers = defenderPlans.Containers,\n    KeyVaults = defenderPlans.KeyVaults,\n    Arm = defenderPlans.Arm,\n    DNS = defenderPlans.Dns,\n    KubernetesService = defenderPlans.KubernetesService,\n    ContainerRegistry = defenderPlans.ContainerRegistry",
                    "size": 1,
                    "showAnalytics": true,
                    "title": "Absolute coverage across Azure subscriptions",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscription}"
                    ],
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "subscriptionId",
                          "formatter": 15,
                          "formatOptions": {
                            "linkTarget": "Resource",
                            "showIcon": true,
                            "customColumnWidthSetting": "50ch"
                          }
                        },
                        {
                          "columnMatch": "CloudPosture",
                          "formatter": 18,
                          "formatOptions": {
                            "linkColumn": "subscriptionId",
                            "linkTarget": "OpenBlade",
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Standard",
                                "representation": "lightBlue",
                                "text": "on"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "blueDark",
                                "text": "off"
                              }
                            ],
                            "bladeOpenContext": {
                              "bladeName": "PolicyPricingWithBundlesBlade",
                              "extensionName": "Microsoft_Azure_Security",
                              "bladeParameters": [
                                {
                                  "name": "subscriptionId",
                                  "source": "column",
                                  "value": "subscriptionId"
                                }
                              ]
                            },
                            "customColumnWidthSetting": "20ch"
                          }
                        },
                        {
                          "columnMatch": "VirtualMachines",
                          "formatter": 18,
                          "formatOptions": {
                            "linkColumn": "subscriptionId",
                            "linkTarget": "OpenBlade",
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "P1",
                                "representation": "lightBlue",
                                "text": "Plan 1 on"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "P2",
                                "representation": "lightBlue",
                                "text": "Plan 2 on"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "blueDark",
                                "text": "off"
                              }
                            ],
                            "bladeOpenContext": {
                              "bladeName": "PolicyPricingWithBundlesBlade",
                              "extensionName": "Microsoft_Azure_Security",
                              "bladeParameters": [
                                {
                                  "name": "subscriptionId",
                                  "source": "column",
                                  "value": "subscriptionId"
                                }
                              ]
                            },
                            "customColumnWidthSetting": "12.5ch"
                          }
                        },
                        {
                          "columnMatch": "AppServices",
                          "formatter": 18,
                          "formatOptions": {
                            "linkColumn": "subscriptionId",
                            "linkTarget": "OpenBlade",
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Standard",
                                "representation": "lightBlue",
                                "text": "on"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "blueDark",
                                "text": "off"
                              }
                            ],
                            "bladeOpenContext": {
                              "bladeName": "PolicyPricingWithBundlesBlade",
                              "extensionName": "Microsoft_Azure_Security",
                              "bladeParameters": [
                                {
                                  "name": "subscriptionId",
                                  "source": "column",
                                  "value": "subscriptionId"
                                }
                              ]
                            },
                            "customColumnWidthSetting": "16ch"
                          }
                        },
                        {
                          "columnMatch": "SqlServers",
                          "formatter": 18,
                          "formatOptions": {
                            "linkColumn": "subscriptionId",
                            "linkTarget": "OpenBlade",
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Standard",
                                "representation": "lightBlue",
                                "text": "on"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "blueDark",
                                "text": "off"
                              }
                            ],
                            "bladeOpenContext": {
                              "bladeName": "PolicyPricingWithBundlesBlade",
                              "extensionName": "Microsoft_Azure_Security",
                              "bladeParameters": [
                                {
                                  "name": "subscriptionId",
                                  "source": "column",
                                  "value": "subscriptionId"
                                }
                              ]
                            },
                            "customColumnWidthSetting": "10ch"
                          }
                        },
                        {
                          "columnMatch": "SqlServerVirtualMachines",
                          "formatter": 18,
                          "formatOptions": {
                            "linkColumn": "subscriptionId",
                            "linkTarget": "OpenBlade",
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Standard",
                                "representation": "lightBlue",
                                "text": "on"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "blueDark",
                                "text": "off"
                              }
                            ],
                            "bladeOpenContext": {
                              "bladeName": "PolicyPricingWithBundlesBlade",
                              "extensionName": "Microsoft_Azure_Security",
                              "bladeParameters": [
                                {
                                  "name": "subscriptionId",
                                  "source": "column",
                                  "value": "subscriptionId"
                                }
                              ]
                            },
                            "customColumnWidthSetting": "26ch"
                          }
                        },
                        {
                          "columnMatch": "OpenSourceRelationalDatabases",
                          "formatter": 18,
                          "formatOptions": {
                            "linkColumn": "subscriptionId",
                            "linkTarget": "OpenBlade",
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Standard",
                                "representation": "lightBlue",
                                "text": "on"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "blueDark",
                                "text": "off"
                              }
                            ],
                            "bladeOpenContext": {
                              "bladeName": "PolicyPricingWithBundlesBlade",
                              "extensionName": "Microsoft_Azure_Security",
                              "bladeParameters": [
                                {
                                  "name": "subscriptionId",
                                  "source": "column",
                                  "value": "subscriptionId"
                                }
                              ]
                            },
                            "customColumnWidthSetting": "29ch"
                          }
                        },
                        {
                          "columnMatch": "CosmosDB",
                          "formatter": 18,
                          "formatOptions": {
                            "linkColumn": "subscriptionId",
                            "linkTarget": "OpenBlade",
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Standard",
                                "representation": "lightBlue",
                                "text": "on"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "blueDark",
                                "text": "off"
                              }
                            ],
                            "bladeOpenContext": {
                              "bladeName": "PolicyPricingWithBundlesBlade",
                              "extensionName": "Microsoft_Azure_Security",
                              "bladeParameters": [
                                {
                                  "name": "subscriptionId",
                                  "source": "column",
                                  "value": "subscriptionId"
                                }
                              ]
                            },
                            "customColumnWidthSetting": "15.5ch"
                          }
                        },
                        {
                          "columnMatch": "StorageAccounts",
                          "formatter": 18,
                          "formatOptions": {
                            "linkColumn": "subscriptionId",
                            "linkTarget": "OpenBlade",
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "DefenderForStorageV2",
                                "representation": "lightBlue",
                                "text": "on (Defender for Storage V2)"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "PerStorageAccount",
                                "representation": "lightBlue",
                                "text": "on (per storage account)"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "PerTransaction",
                                "representation": "lightBlue",
                                "text": "on (per transaction)"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "blueDark",
                                "text": "off"
                              }
                            ],
                            "bladeOpenContext": {
                              "bladeName": "PolicyPricingWithBundlesBlade",
                              "extensionName": "Microsoft_Azure_Security",
                              "bladeParameters": [
                                {
                                  "name": "subscriptionId",
                                  "source": "column",
                                  "value": "subscriptionId"
                                }
                              ]
                            },
                            "customColumnWidthSetting": "27ch"
                          }
                        },
                        {
                          "columnMatch": "Containers",
                          "formatter": 18,
                          "formatOptions": {
                            "linkColumn": "subscriptionId",
                            "linkTarget": "OpenBlade",
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Standard",
                                "representation": "lightBlue",
                                "text": "on"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "blueDark",
                                "text": "off"
                              }
                            ],
                            "bladeOpenContext": {
                              "bladeName": "PolicyPricingWithBundlesBlade",
                              "extensionName": "Microsoft_Azure_Security",
                              "bladeParameters": [
                                {
                                  "name": "subscriptionId",
                                  "source": "column",
                                  "value": "subscriptionId"
                                }
                              ]
                            },
                            "customColumnWidthSetting": "15ch"
                          }
                        },
                        {
                          "columnMatch": "KeyVaults",
                          "formatter": 18,
                          "formatOptions": {
                            "linkColumn": "subscriptionId",
                            "linkTarget": "OpenBlade",
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "PerKeyVault",
                                "representation": "lightBlue",
                                "text": "on (per resource)"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "PerTransaction",
                                "representation": "lightBlue",
                                "text": "on (per transaction)"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "blueDark",
                                "text": "off"
                              }
                            ],
                            "bladeOpenContext": {
                              "bladeName": "PolicyPricingWithBundlesBlade",
                              "extensionName": "Microsoft_Azure_Security",
                              "bladeParameters": [
                                {
                                  "name": "subscriptionId",
                                  "source": "column",
                                  "value": "subscriptionId"
                                }
                              ]
                            },
                            "customColumnWidthSetting": "17ch"
                          }
                        },
                        {
                          "columnMatch": "Arm",
                          "formatter": 18,
                          "formatOptions": {
                            "linkColumn": "subscriptionId",
                            "linkTarget": "OpenBlade",
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "PerSubscription",
                                "representation": "lightBlue",
                                "text": "on (per subscription)"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "PerApiCall",
                                "representation": "lightBlue",
                                "text": "on (per API call)"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "blueDark",
                                "text": "off"
                              }
                            ],
                            "bladeOpenContext": {
                              "bladeName": "PolicyPricingWithBundlesBlade",
                              "extensionName": "Microsoft_Azure_Security",
                              "bladeParameters": [
                                {
                                  "name": "subscriptionId",
                                  "source": "column",
                                  "value": "subscriptionId"
                                }
                              ]
                            },
                            "customColumnWidthSetting": "21ch"
                          }
                        },
                        {
                          "columnMatch": "DNS",
                          "formatter": 18,
                          "formatOptions": {
                            "linkColumn": "subscriptionId",
                            "linkTarget": "OpenBlade",
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Standard",
                                "representation": "lightBlue",
                                "text": "on"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "blueDark",
                                "text": "off"
                              }
                            ],
                            "bladeOpenContext": {
                              "bladeName": "PolicyPricingWithBundlesBlade",
                              "extensionName": "Microsoft_Azure_Security",
                              "bladeParameters": [
                                {
                                  "name": "subscriptionId",
                                  "source": "column",
                                  "value": "subscriptionId"
                                }
                              ]
                            },
                            "customColumnWidthSetting": "10.7ch"
                          }
                        },
                        {
                          "columnMatch": "KubernetesService",
                          "formatter": 18,
                          "formatOptions": {
                            "linkColumn": "subscriptionId",
                            "linkTarget": "OpenBlade",
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Standard",
                                "representation": "lightBlue",
                                "text": "on"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "blueDark",
                                "text": "off"
                              }
                            ],
                            "bladeOpenContext": {
                              "bladeName": "PolicyPricingWithBundlesBlade",
                              "extensionName": "Microsoft_Azure_Security",
                              "bladeParameters": [
                                {
                                  "name": "subscriptionId",
                                  "source": "column",
                                  "value": "subscriptionId"
                                }
                              ]
                            },
                            "customColumnWidthSetting": "19.7ch"
                          }
                        },
                        {
                          "columnMatch": "ContainerRegistry",
                          "formatter": 18,
                          "formatOptions": {
                            "linkColumn": "subscriptionId",
                            "linkTarget": "OpenBlade",
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Standard",
                                "representation": "lightBlue",
                                "text": "on"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "blueDark",
                                "text": "off"
                              }
                            ],
                            "bladeOpenContext": {
                              "bladeName": "PolicyPricingWithBundlesBlade",
                              "extensionName": "Microsoft_Azure_Security",
                              "bladeParameters": [
                                {
                                  "name": "subscriptionId",
                                  "source": "column",
                                  "value": "subscriptionId"
                                }
                              ]
                            },
                            "customColumnWidthSetting": "32ch"
                          }
                        },
                        {
                          "columnMatch": "subscriptionName",
                          "formatter": 5,
                          "formatOptions": {
                            "linkTarget": "Resource"
                          }
                        }
                      ],
                      "rowLimit": 10000,
                      "filter": true,
                      "labelSettings": [
                        {
                          "columnId": "subscriptionId",
                          "label": "Subscription Name"
                        },
                        {
                          "columnId": "CloudPosture",
                          "label": "Defender CSPM"
                        },
                        {
                          "columnId": "VirtualMachines",
                          "label": "Servers"
                        },
                        {
                          "columnId": "AppServices",
                          "label": "App Services"
                        },
                        {
                          "columnId": "SqlServers",
                          "label": "SQL"
                        },
                        {
                          "columnId": "SqlServerVirtualMachines",
                          "label": "SQL Server on machines"
                        },
                        {
                          "columnId": "OpenSourceRelationalDatabases",
                          "label": "Open-source relational DBs"
                        },
                        {
                          "columnId": "CosmosDB",
                          "label": "Cosmos DB"
                        },
                        {
                          "columnId": "StorageAccounts",
                          "label": "Storage"
                        },
                        {
                          "columnId": "Containers",
                          "label": "Containers"
                        },
                        {
                          "columnId": "KeyVaults",
                          "label": "Key Vaults"
                        },
                        {
                          "columnId": "Arm",
                          "label": "Resource Manager"
                        },
                        {
                          "columnId": "DNS",
                          "label": "DNS (deprecated)"
                        },
                        {
                          "columnId": "KubernetesService",
                          "label": "K8s (deprecated)"
                        },
                        {
                          "columnId": "ContainerRegistry",
                          "label": "Container Registry (deprecated)"
                        }
                      ]
                    },
                    "sortBy": []
                  },
                  "name": "queryAzure"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "resources\r\n| where type =~ 'microsoft.compute/virtualmachines'\r\n    and resourceGroup in ({ResourceGroup})\r\n| project vmId = tolower(id), vmName = name, subscriptionId, resourceGroup, location, type\r\n| join kind=leftouter (\r\n    resources\r\n    | where type =~ 'microsoft.compute/virtualmachines/extensions'\r\n    | where tolower(name) has \"mde.windows\"\r\n        or tolower(tostring(properties.type)) == \"mde.windows\"\r\n        or tolower(tostring(properties.publisher)) == \"microsoft.azure.azuredefenderforservers\"\r\n    | where tolower(tostring(properties.provisioningState)) == \"succeeded\"\r\n    | extend parentVmIdLower = tolower(tostring(split(id, \"/extensions/\")[0]))\r\n    | distinct parentVmIdLower\r\n) on $left.vmId == $right.parentVmIdLower\r\n| where parentVmIdLower == \"\"\r\n| extend\r\n    Recommendation = \"Enable Defender for Server\",\r\n    RecommendationId = \"defender-server-001\",\r\n    ImplementationImpact = \"High\",\r\n    ImplementationComplexity = \"Low\",\r\n    type = \"microsoft.compute/virtualmachines\"\r\n| project id = vmId, type, Recommendation, RecommendationId, ImplementationImpact, ImplementationComplexity\r\n| join kind=leftouter (\r\n    resources\r\n    | where type =~ 'microsoft.compute/virtualmachines'\r\n        and resourceGroup in ({ResourceGroup})\r\n    | summarize Total = count()\r\n    | extend type = \"microsoft.compute/virtualmachines\" \r\n) on type\r\n| summarize ImpactedCount = count() by RecommendationId, type, Recommendation, ImplementationImpact, ImplementationComplexity, Total\r\n| extend ImpactedResources = strcat(ImpactedCount, '/', Total)\r\n| project Recommendation, type, ImpactedResources, ImplementationImpact, ImplementationComplexity",
                    "size": 0,
                    "title": "Recommendation by Impact",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscription}"
                    ],
                    "visualization": "tiles",
                    "sortBy": [],
                    "tileSettings": {
                      "titleContent": {
                        "columnMatch": "Recommendation"
                      },
                      "subtitleContent": {
                        "columnMatch": "type"
                      },
                      "leftContent": {
                        "columnMatch": "ImpactedResources",
                        "formatter": 12,
                        "formatOptions": {
                          "palette": "auto"
                        },
                        "tooltipFormat": {
                          "tooltip": "Number of impacted resources / Total resources"
                        }
                      },
                      "secondaryContent": {
                        "columnMatch": "RecommendationId"
                      },
                      "showBorder": true,
                      "size": "auto",
                      "styleSettings": {
                        "borderStyle": "rounded"
                      }
                    }
                  },
                  "name": "visualImplementationImpact-Defender"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "resources\r\n| where type =~ 'microsoft.compute/virtualmachines'\r\n    and resourceGroup in ({ResourceGroup})\r\n| project vmId = tolower(id), vmName = name, subscriptionId, resourceGroup, location, type\r\n| join kind=leftouter (\r\n    resources\r\n    | where type =~ 'microsoft.compute/virtualmachines/extensions'\r\n    | where tolower(name) has \"mde.windows\"\r\n        or tolower(tostring(properties.type)) == \"mde.windows\"\r\n        or tolower(tostring(properties.publisher)) == \"microsoft.azure.azuredefenderforservers\"\r\n    | where tolower(tostring(properties.provisioningState)) == \"succeeded\"\r\n    | extend parentVmIdLower = tolower(tostring(split(id, \"/extensions/\")[0]))\r\n    | distinct parentVmIdLower\r\n) on $left.vmId == $right.parentVmIdLower\r\n| where parentVmIdLower == \"\"\r\n| extend\r\n    Recommendation = \"Enable Defender for Server\",\r\n    RecommendationId = \"defender-server-001\",\r\n    ImplementationImpact = \"High\",\r\n    ImplementationComplexity = \"Low\",\r\n    type = \"microsoft.compute/virtualmachines\" // Ensure type is present for the next join\r\n| project id = vmId, type, Recommendation, RecommendationId, ImplementationImpact, ImplementationComplexity\r\n| join kind=leftouter (\r\n    resources\r\n    | where type =~ 'microsoft.compute/virtualmachines'\r\n        and resourceGroup in ({ResourceGroup})\r\n    | summarize Total = count()\r\n    | extend type = \"microsoft.compute/virtualmachines\" // Ensure type is present for the join\r\n) on type\r\n| summarize ImpactedCount = count() by RecommendationId, type, Recommendation, ImplementationImpact, ImplementationComplexity, Total\r\n| extend ImpactedResources = strcat(ImpactedCount, '/', Total)\r\n| project Recommendation, type, ImpactedResources, ImplementationImpact, ImplementationComplexity",
                    "size": 0,
                    "showAnalytics": true,
                    "title": "Defender for Cloud recommendations",
                    "showRefreshButton": true,
                    "showExportToExcel": true,
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscription}"
                    ],
                    "gridSettings": {
                      "sortBy": [
                        {
                          "itemKey": "ImplementationComplexity",
                          "sortOrder": 1
                        }
                      ]
                    },
                    "sortBy": [
                      {
                        "itemKey": "ImplementationComplexity",
                        "sortOrder": 1
                      }
                    ]
                  },
                  "name": "Executive insights-Defender"
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "SelectedSubTab",
              "comparison": "isEqualTo",
              "value": "Overview"
            },
            "name": "groupOverviewDefender"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "resources\r\n| where type =~ 'microsoft.compute/virtualmachines'\r\n| extend vmIdLower = tolower(id)\r\n| project vmIdLower, vmName = name, subscriptionId, resourceGroup, location\r\n| join kind=leftouter (\r\n    resources\r\n    | where type =~ 'microsoft.compute/virtualmachines/extensions'\r\n    | where tolower(name) has \"mde.windows\"\r\n        or tolower(tostring(properties.type)) == \"mde.windows\"\r\n        or tolower(tostring(properties.publisher)) == \"microsoft.azure.azuredefenderforservers\"\r\n    | where tolower(tostring(properties.provisioningState)) == \"succeeded\"\r\n    | extend vmIdLower = tolower(tostring(split(id, \"/extensions/\")[0]))\r\n    | project vmIdLower\r\n    | distinct vmIdLower\r\n) on vmIdLower\r\n| where isempty(vmIdLower1)\r\n| project vmName, subscriptionId, resourceGroup, location\r\n| order by subscriptionId, resourceGroup, vmName",
                    "size": 0,
                    "title": "VMs without Defender for Cloud",
                    "showExportToExcel": true,
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscription}"
                    ]
                  },
                  "name": "queryVMDefender"
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "SelectedSubTab",
              "comparison": "isEqualTo",
              "value": "Details"
            },
            "name": "groupDefenderforCloudDetails"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "SelectedTab",
        "comparison": "isEqualTo",
        "value": "Security"
      },
      "name": "groupSecurity"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "title": "Monitor",
        "items": [
          {
            "type": 11,
            "content": {
              "version": "LinkItem/1.0",
              "style": "tabs",
              "links": [
                {
                  "id": "ca40468d-4518-43bf-ac6e-0a11d7331e12",
                  "cellValue": "SelectedSubTab",
                  "linkTarget": "parameter",
                  "linkLabel": "Overview",
                  "subTarget": "Overview",
                  "style": "link"
                },
                {
                  "id": "f280fc2a-f42a-42a4-ad4b-be37ab3e8b48",
                  "cellValue": "SelectedSubTab",
                  "linkTarget": "parameter",
                  "linkLabel": "Details",
                  "subTarget": "Details",
                  "style": "link"
                }
              ]
            },
            "name": "links - defenderSubTab"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 1,
                  "content": {
                    "json": "# Monitoring\r\n## Monitoring Best Practice Checks\r\nThis section assesses your Azure resources for adherence to monitoring best practices. Recommendations focus on ensuring that logging, alerting, and observability are properly configured, enabling proactive detection and response to issues. Implementing these recommendations helps maintain visibility into your environment and supports operational excellence.",
                    "style": "upsell"
                  },
                  "name": "text - Monitoring"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "resources\r\n| where type =~ 'microsoft.compute/virtualmachines'\r\n    and resourceGroup in ({ResourceGroup})\r\n| project vmId = tolower(id), vmName = name, subscriptionId, resourceGroup, location, type\r\n| join kind=leftouter (\r\n    resources\r\n    | where type =~ 'microsoft.compute/virtualmachines/extensions'\r\n    | where name =~ 'AzureMonitorWindowsAgent' or name =~ 'AzureMonitorLinuxAgent'\r\n    | extend vmId = tolower(split(id, '/extensions/')[0])\r\n    | project vmId, hasAMA = true\r\n) on vmId\r\n| extend hasAMA = iff(isnull(hasAMA), false, true)\r\n| extend\r\n    Recommendation = iff(hasAMA, \"VM has Azure Monitor Agent installed\", \"Install Azure Monitor Agent\"),\r\n    RecommendationId = \"f25343b5-b3c1-406c-a362-38dd97239733\",\r\n    ImplementationImpact = \"High\",\r\n    ImplementationComplexity = \"Low\",\r\n    type = \"microsoft.compute/virtualmachines\"\r\n| where hasAMA == false\r\n| join kind=leftouter (\r\n    resources\r\n    | where type =~ 'microsoft.compute/virtualmachines'\r\n       and resourceGroup in ({ResourceGroup})\r\n    | summarize Total = count()\r\n    | extend type = \"microsoft.compute/virtualmachines\"\r\n) on type\r\n| summarize ImpactedCount = count() by RecommendationId, type, Recommendation, ImplementationImpact, ImplementationComplexity, Total\r\n| extend ImpactedResources = strcat(ImpactedCount, '/', Total)\r\n| project Recommendation, type, ImpactedResources, ImplementationImpact, ImplementationComplexity",
                    "size": 0,
                    "title": "Recommendation by Impact",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscription}"
                    ],
                    "visualization": "tiles",
                    "sortBy": [],
                    "tileSettings": {
                      "titleContent": {
                        "columnMatch": "Recommendation"
                      },
                      "subtitleContent": {
                        "columnMatch": "type"
                      },
                      "leftContent": {
                        "columnMatch": "ImpactedResources",
                        "formatter": 12,
                        "formatOptions": {
                          "palette": "auto"
                        },
                        "tooltipFormat": {
                          "tooltip": "Number of impacted resources / Total resources"
                        }
                      },
                      "secondaryContent": {
                        "columnMatch": "RecommendationId"
                      },
                      "showBorder": true,
                      "size": "auto",
                      "styleSettings": {
                        "borderStyle": "rounded"
                      }
                    }
                  },
                  "name": "visualImplementationImpact-Defender"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "resources\r\n| where type =~ 'microsoft.compute/virtualmachines'\r\n    and resourceGroup in ({ResourceGroup})\r\n| project vmId = tolower(id), vmName = name, subscriptionId, resourceGroup, location, type\r\n| join kind=leftouter (\r\n    resources\r\n    | where type =~ 'microsoft.compute/virtualmachines/extensions'\r\n    | where name =~ 'AzureMonitorWindowsAgent' or name =~ 'AzureMonitorLinuxAgent'\r\n    | extend vmId = tolower(split(id, '/extensions/')[0])\r\n    | project vmId, hasAMA = true\r\n) on vmId\r\n| extend hasAMA = iff(isnull(hasAMA), false, true)\r\n| extend\r\n    Recommendation = iff(hasAMA, \"VM has Azure Monitor Agent installed\", \"Install Azure Monitor Agent\"),\r\n    RecommendationId = \"f25343b5-b3c1-406c-a362-38dd97239733\",\r\n    ImplementationImpact = \"High\",\r\n    ImplementationComplexity = \"Low\",\r\n    type = \"microsoft.compute/virtualmachines\"\r\n| where hasAMA == false\r\n| join kind=leftouter (\r\n    resources\r\n    | where type =~ 'microsoft.compute/virtualmachines'\r\n       and resourceGroup in ({ResourceGroup})\r\n    | summarize Total = count()\r\n    | extend type = \"microsoft.compute/virtualmachines\"\r\n) on type\r\n| summarize ImpactedCount = count() by RecommendationId, type, Recommendation, ImplementationImpact, ImplementationComplexity, Total\r\n| extend ImpactedResources = strcat(ImpactedCount, '/', Total)\r\n| project Recommendation, type, ImpactedResources, ImplementationImpact, ImplementationComplexity",
                    "size": 0,
                    "showAnalytics": true,
                    "title": "Azure Monitor recommendations",
                    "showRefreshButton": true,
                    "showExportToExcel": true,
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscription}"
                    ],
                    "gridSettings": {
                      "sortBy": [
                        {
                          "itemKey": "ImplementationComplexity",
                          "sortOrder": 1
                        }
                      ]
                    },
                    "sortBy": [
                      {
                        "itemKey": "ImplementationComplexity",
                        "sortOrder": 1
                      }
                    ]
                  },
                  "name": "Executive insights-Azure Monitor"
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "SelectedSubTab",
              "comparison": "isEqualTo",
              "value": "Overview"
            },
            "name": "groupOverviewDefender"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "resources\r\n| where type =~ 'microsoft.compute/virtualmachines'\r\n    and resourceGroup in ({ResourceGroup})\r\n| project vmId = tolower(id), vmName = name, subscriptionId, resourceGroup, location, type\r\n| join kind=leftouter (\r\n    resources\r\n    | where type =~ 'microsoft.compute/virtualmachines/extensions'\r\n    | where name =~ 'AzureMonitorWindowsAgent' or name =~ 'AzureMonitorLinuxAgent'\r\n    | extend vmId = tolower(split(id, '/extensions/')[0])\r\n    | project vmId, hasAMA = true\r\n) on vmId\r\n| extend hasAMA = iff(isnull(hasAMA), false, true)\r\n| extend\r\n    Recommendation = iff(hasAMA, \"VM has Azure Monitor Agent installed\", \"Install Azure Monitor Agent\"),\r\n    RecommendationId = \"f25343b5-b3c1-406c-a362-38dd97239733\",\r\n    ImplementationImpact = \"High\",\r\n    ImplementationComplexity = \"Low\",\r\n    type = \"microsoft.compute/virtualmachines\"\r\n| where hasAMA == false\r\n| join kind=leftouter (\r\n    resources\r\n    | where type =~ 'microsoft.compute/virtualmachines'\r\n       and resourceGroup in ({ResourceGroup})\r\n    | summarize Total = count()\r\n    | extend type = \"microsoft.compute/virtualmachines\"\r\n) on type\r\n//| summarize ImpactedCount = count() by RecommendationId, type, Recommendation, ImplementationImpact, ImplementationComplexity, Total\r\n//| extend ImpactedResources = strcat(ImpactedCount, '/', Total)\r\n| project vmName, Recommendation,resourceGroup,subscriptionId, ImplementationImpact, ImplementationComplexity",
                    "size": 0,
                    "title": "VMs without Azure Monitor Agent",
                    "showExportToExcel": true,
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscription}"
                    ],
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "vmName",
                          "formatter": 13,
                          "formatOptions": {
                            "linkTarget": null,
                            "showIcon": true
                          }
                        },
                        {
                          "columnMatch": "resourceGroup",
                          "formatter": 14,
                          "formatOptions": {
                            "linkTarget": null,
                            "showIcon": true
                          }
                        },
                        {
                          "columnMatch": "subscriptionId",
                          "formatter": 15,
                          "formatOptions": {
                            "linkTarget": null,
                            "showIcon": true
                          }
                        }
                      ]
                    }
                  },
                  "name": "queryAMA"
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "SelectedSubTab",
              "comparison": "isEqualTo",
              "value": "Details"
            },
            "name": "groupDefenderforCloudDetails"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "SelectedTab",
        "comparison": "isEqualTo",
        "value": "Monitor"
      },
      "name": "groupMonitor"
    }
  ],
  "fallbackResourceIds": [
    "azure monitor"
  ],
  "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json"
}
